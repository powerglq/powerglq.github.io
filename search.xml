<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>kali无线相关</title>
      <link href="/2020/12/17/kali-wu-xian-xiang-guan/"/>
      <url>/2020/12/17/kali-wu-xian-xiang-guan/</url>
      
        <content type="html"><![CDATA[<h4 id="安装vmware"><a href="#安装vmware" class="headerlink" title="安装vmware"></a>安装vmware</h4><ul><li>1.主程序</li><li>2.开启桥接/nat无线网卡</li><li>3.开启USB服务<br>win10确认开启vmware相关服务<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/1.jpg" alt="info"><br>虚拟机 -&gt; 可移动设备 -&gt; 选择无线网卡 -&gt; 连接 -&gt; 虚拟机出现WIFI列表<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/2.jpg" alt="info"><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> //显示无线网卡</code></pre><img src="/2020/12/17/kali-wu-xian-xiang-guan/3.jpg" alt="info"></li></ul><hr><h4 id="使用airmon-ng"><a href="#使用airmon-ng" class="headerlink" title="使用airmon-ng"></a>使用airmon-ng</h4><pre class="language-bash" data-language="bash"><code class="language-bash">airmon-ng start wlan0</code></pre><p><img src="/2020/12/17/kali-wu-xian-xiang-guan/4.jpg" alt="info"></p><p>输入iwconfig命令查看网卡信息， wlan0mon网卡名加了mon则表示成功<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/5.jpg" alt="info"></p><p>命令airodump-ng wlan0mon，开始扫描WiFi，按ctrl+c结束任务<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/6.jpg" alt="info"><br>BSSID为wifi的MAC地址，PWR为信号强弱程度，数值越小信号越强；#DATA为数据量，越大使用的人就越多，CH为信道频率（频道），ESSID为wifi的名称，中文可能会有乱码</p><p>接着输入airodump-ng –bssid BSSID -c 信道频率 -w 抓包存储的路径 wlan0mon<br>如：airodump-ng –bssid BC:5F:6F:3D:03:74 -c 13 -w /home/wifi wlan0mon<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/7.jpg" alt="info"><br>数据包已经正在抓取<br>如果抓取不到数据，新建一个终端：键入airepaly-ng -0 0 -c 连接到WiFi的手机mac地址 -a bssid 网卡名（一般为wlan0mon）<br>如：aireplay-ng -0 0 -c B8:37:65:94:5D:13 -a BC:5F:6F:3D:03:74 wlan0mon<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/8.jpg" alt="info"><br>(0 WiFi设备无限次数,-0 8则攻击8次。攻击原理是：先让设备掉线，设备会再自动连接，并发这个自动连接过程会进行三次握手，会发送tcp包（里面包含加密的密码数据），我方伪装成WiFi热点去窃取该数据包。我方窃取后即可用字典穷举法暴力破解加密的WiFi密码,<br>数据包里面的密码是哈希加密的，哈希加密只能正向)</p><p>出现WPA handshake时，表示抓包成功<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/9.jpg" alt="info"></p><p>两个终端都按Ctrl+c停止，不然那边会一直断网的<br>cd打开抓包的目录，ls列出来，就看到我们抓到的数据包<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/10.jpg" alt="info"></p><p>解压kali自带的字典文件 路径：/usr/share/wordlists/rockyou.txt.gz<br>如 ：gzip -d/usr/share/wordlists/rockyou.txt.gz</p><p>键入 aircrack-ng -w 字典路径 握手包路径，回车后开始爆破<br>如：aircrack-ng -w /usr/share/wordlists/rockyou.txt /home/wifi-0.1.cap<br><img src="/2020/12/17/kali-wu-xian-xiang-guan/11.jpg" alt="info"></p><p>耐心等待密码破解吧…</p><p>特别说明：暴力破解并不简单，需要足够强大的字典和时间，可以通过字典生成工具生成自己的字典，字典越强大越容易破解。。哈哈，也是需要点运气的！</p>]]></content>
      
      
      <categories>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建ETH矿池</title>
      <link href="/2020/12/05/da-jian-eth-kuang-chi/"/>
      <url>/2020/12/05/da-jian-eth-kuang-chi/</url>
      
        <content type="html"><![CDATA[<h4 id="搭建ETH矿池"><a href="#搭建ETH矿池" class="headerlink" title="搭建ETH矿池"></a>搭建ETH矿池</h4><h4 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h4><p>懂一点Linux 操作<br>懂一点BlockChain<br>懂一点Programming<br>如果你都不懂也还是可以，知其然不知其所以然罢了。</p><h4 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h4><p>一台至少1GB RAM跟至少50GB (取决于Blockchain帐本大小)的Server。<br>OS选择Ubunutu 16.04 LTS。</p><h4 id="建置流程"><a href="#建置流程" class="headerlink" title="建置流程"></a>建置流程</h4><p>开一台Ubuntu 16.04。<br>安装必要的套件。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">git</span><span class="token function">apt</span> <span class="token function">install</span> build-essential libtool autotools-dev autoconf pkg-config libssl-dev<span class="token function">apt</span> <span class="token function">install</span> libboost-all-dev <span class="token function">git</span> <span class="token function">npm</span> nodejs nodejs-legacy libminiupnpc-dev redis-server<span class="token function">apt</span> <span class="token function">install</span> libdb4.8-dev libdb4.8++-dev<span class="token function">apt</span> <span class="token function">install</span> golang<span class="token function">apt</span> <span class="token function">install</span> nginx<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span></code></pre><p>根据你要架设的矿池装对应的钱包同步套件clone 回来，以ETH 来说那就是：</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/ethereum/go-ethereum</code></pre><p>接着把套件装起来。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> go-ethereum<span class="token function">make</span> geth</code></pre><p>装好后运行build/bin/geth待节点同步完成就可以使用了，你也可以用他产生钱包、挖矿、开发等，更详细的操作可以去Wiki查看。</p><p>现在，设定好了节点，接下来就是把矿池架起来。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --global http.https://gopkg.in.followRedirects <span class="token boolean">true</span><span class="token function">git</span> clone https://github.com/sammy007/open-ethereum-pool.git<span class="token builtin class-name">cd</span> open-ethereum-pool<span class="token function">make</span></code></pre><p>安装redis。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> redis</code></pre><p>然后把矿池跑起来。</p><pre class="language-bash" data-language="bash"><code class="language-bash">./build/bin/open-ethereum-pool config.json</code></pre><p>config.json可以参考目录底下的config.example.json作相对应的修改。<br>你可以查看Wiki来对矿池做更多的修正。</p><p>有了矿池的后端，现在你还需要一个前端的页面让使用者看。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> www</code></pre><p>对www/config/environment.js做任何你想要的修改。<br>里面的ApiUrl: ‘//example.net/‘请务必更改为你的矿池网址。</p><p>接着将前端install 起来。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> python-software-propertiesadd-apt-repository ppa:gias-kay-lee/npm<span class="token function">apt</span> update<span class="token function">apt</span> <span class="token function">install</span> <span class="token function">npm</span><span class="token function">npm</span> <span class="token function">install</span> -g ember-cli@2.9.1<span class="token function">npm</span> <span class="token function">install</span> -g bower<span class="token function">npm</span> <span class="token function">install</span>bower <span class="token function">install</span>./build.sh</code></pre><p>最后的最后，把nginx 设定好。</p><pre class="language-bash" data-language="bash"><code class="language-bash">upstream api <span class="token punctuation">&#123;</span>    server <span class="token number">127.0</span>.0.1:8080<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>location /api <span class="token punctuation">&#123;</span>    proxy_pass http://api<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>这样，一个简单的矿池就架起来啰！</p><p><a href="https://github.com/sammy007/open-ethereum-pool">官网</a></p>]]></content>
      
      
      <categories>
          
          <category> 数字货币 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数字货币 </tag>
            
            <tag> eth </tag>
            
            <tag> 以太坊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10正确食用方法</title>
      <link href="/2020/10/23/win10-shi-yong-fang-fa/"/>
      <url>/2020/10/23/win10-shi-yong-fang-fa/</url>
      
        <content type="html"><![CDATA[<h4 id="win10正确食用方法"><a href="#win10正确食用方法" class="headerlink" title="win10正确食用方法"></a>win10正确食用方法</h4><pre class="language-cmd" data-language="cmd"><code class="language-cmd">slmgr &#x2F;ipk VK7JG-NPHTM-C97JM-9MPGT-3V66Tslmgr &#x2F;skms kms.xspace.inslmgr &#x2F;ato</code></pre><p>上面命令执行后等一会<br>执行下面命令查询激活状态</p><pre class="language-cmd" data-language="cmd"><code class="language-cmd">slmgr.vbs -xpr</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 食用 </tag>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷padavan固件</title>
      <link href="/2020/10/23/shua-padavan-gu-jian/"/>
      <url>/2020/10/23/shua-padavan-gu-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="刷padavan固件"><a href="#刷padavan固件" class="headerlink" title="刷padavan固件"></a>刷padavan固件</h4><p><a href="shua-padavan-gu-jian/learn.docx">教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> padavan </tag>
            
            <tag> v2ray </tag>
            
            <tag> zerotier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>调教padavan</title>
      <link href="/2020/10/23/diao-jiao-padavan/"/>
      <url>/2020/10/23/diao-jiao-padavan/</url>
      
        <content type="html"><![CDATA[<h4 id="调教padavan"><a href="#调教padavan" class="headerlink" title="调教padavan"></a>调教padavan</h4><p>将u盘格式化为ext4<br>df -h 查看优盘是否被加载 且/opt挂载在u盘</p><h4 id="安装opkg"><a href="#安装opkg" class="headerlink" title="安装opkg"></a>安装opkg</h4><p>./opkg.sh<br>在/opt下载 <a href="https://opt.cn2qq.com/opt-file/optupang9.tgz">https://opt.cn2qq.com/opt-file/optupang9.tgz</a> 并解压<br>tar zxvf optupang9.tgz 如果报错缺少libabc* 则通过opkg install libabc安装</p><h4 id="开启v2ray"><a href="#开启v2ray" class="headerlink" title="开启v2ray"></a>开启v2ray</h4><p>如果报错没有v2ray和v2ctl及transocks可以在 <a href="https://opt.cn2qq.com/opt-file/">https://opt.cn2qq.com/opt-file/</a> 下载至/opt/bin<br>自定义设置-》脚本-》在防火墙规则启动后执行:-》/etc/storage/v2ray/padavan-start.sh &amp;<br>重启路由<br>搭建web环境-》v2ray  打开V2Ray proxy开关</p><ul><li><p>方案一 用于全局模式<br>开启透明代理(TCP)？ 关闭transocks<br>导出v2ray客户端配置json 在outbounds后添加<br>“inboundDetour”: [<br>  {</p><pre><code>&quot;port&quot;: &quot;1099&quot;,&quot;listen&quot;: &quot;0.0.0.0&quot;,</code></pre><p>  “protocol”: “dokodemo-door”,<br>  “settings”: {</p><pre><code>&quot;network&quot;: &quot;tcp,udp&quot;,&quot;timeout&quot;: 300,&quot;followRedirect&quot;: true</code></pre><p>  }<br>  }<br>],<br>重启路由后会自动开启chinadns及ss_tproxy 不需要人工干预 不需要transocks</p></li><li><p>方案二 自动匹配网址是否需要fan<br>打开transocks<br>工作模式：gfwlist<br>透明重定向的代理服务器IP、域名:192.168.123.1<br>透明重定向的代理服务器端口:1080<br>远端服务器IP、域名:13.73.19.143 （服务器ip）<br>v2ray客户端配置json 中 inbounds-》port-》1080    listen-》192.168.123.1<br>开启透明代理(TCP)？关闭<br>ss_tproxy -&gt; DNS 代理服务模式选择 -&gt; 如果dnsproxy获取不到则可用dnsmasq</p></li></ul><h4 id="安装zerotier"><a href="#安装zerotier" class="headerlink" title="安装zerotier"></a>安装zerotier</h4><p>cd /opt<br>通过aws下载拷贝至padvan安装<br>wget <a href="http://bin.entware.net/mipselsf-k3.4/zerotier_1.4.6-5_mipsel-3.4.ipk">http://bin.entware.net/mipselsf-k3.4/zerotier_1.4.6-5_mipsel-3.4.ipk</a><br>opkg install ./zerotier_1.4.6-5_mipsel-3.4.ipk<br>如果依赖文件无法安装 先下载再安装<br>zerotier-one -d<br>zerotier-cli join 12ac4a1e71d7f2c2<br>查看虚拟网卡名称<br>ifconfig<br>iptables -A INPUT  -i ztbtoz33ft -j ACCEPT<br>杀死当前zt进程<br>ps -wlT | grep “zerotier-one -d” | grep -v grep | awk ‘{print $3}’ | xargs kill -9</p><h4 id="设置-ZeroTier-开机自启"><a href="#设置-ZeroTier-开机自启" class="headerlink" title="设置 ZeroTier 开机自启"></a>设置 ZeroTier 开机自启</h4><p>进入路由器后台，在自定义设置的脚本中选择自定义脚本加入下面命令并点击应用本页面设置：</p><h1 id="启动-zerotier"><a href="#启动-zerotier" class="headerlink" title="启动 zerotier"></a>启动 zerotier</h1><p>iptables -A INPUT  -i ztbtoz33ft -j ACCEPT<br>zerotier-one -d</p>]]></content>
      
      
      <categories>
          
          <category> 路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> padavan </tag>
            
            <tag> v2ray </tag>
            
            <tag> zerotier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装elasticsearch</title>
      <link href="/2020/10/23/an-zhuang-elasticsearch/"/>
      <url>/2020/10/23/an-zhuang-elasticsearch/</url>
      
        <content type="html"><![CDATA[<h4 id="安装elasticsearch"><a href="#安装elasticsearch" class="headerlink" title="安装elasticsearch"></a>安装elasticsearch</h4><p>默认端口：9200<br><a href="https://www.cnblogs.com/mkxfs/p/10337585.html">参考文档</a></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz<span class="token function">tar</span> zxvf elasticsearch-6.5.4.tar.gz<span class="token function">mv</span> elasticsearch /soft/elasticsearch<span class="token function">groupadd</span> elasticsearch<span class="token function">useradd</span> elasticsearch -d /home/elasticsearch -g elasticsearch -p 000000<span class="token function">sudo</span> <span class="token function">chown</span> -R elasticsearch:elasticsearch /soft/elasticsearch</code></pre><ul><li>修改/etc/sysctl.conf<br>vm.max_map_count=262144<br>sysctl.conf立即生效<br>/sbin/sysctl -p</li><li>修改config/elasticsearch.yml<br>cluster.name: logsearch<br>node.name: node-1<br>path.data: /soft/elasticsearch/data<br>path.logs: /soft/elasticsearch/logs<br>bootstrap.memory_lock: false<br>network.host: 0.0.0.0<br>#network.bind_host: 0.0.0.0(Unable to connect to Elasticsearch at <a href="http://localhost:9200错误解决方案">http://localhost:9200错误解决方案</a>)<br>http.port: 9200<pre class="language-bash" data-language="bash"><code class="language-bash">./bin/elasticsearchfirewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">9200</span>/tcp --permanentfirewall-cmd --reloadelasticsearch/bin/plugin -install mobz/elasticsearch-head 安装elasticsearch-head</code></pre></li></ul><p><a href="http://localhost:9200/">访问页面</a></p><h4 id="开启x-pack-7-3不需要单独安装x-pack"><a href="#开启x-pack-7-3不需要单独安装x-pack" class="headerlink" title="开启x-pack(7.3不需要单独安装x-pack)"></a>开启x-pack(7.3不需要单独安装x-pack)</h4><p>在elasticsearch.yml添加：<br>xpack.security.audit.enabled: true<br>xpack.license.self_generated.type: basic<br>#如果是basic license的话需要加入下面这一行，不然的话restart elasticsearch之后会报错。<br>xpack.security.transport.ssl.enabled: true</p><h4 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h4><p>/soft/elasticsearch/bin/elasticsearch-setup-passwords interactive</p><blockquote><p>可能有报错</p></blockquote><h4 id="后台启动"><a href="#后台启动" class="headerlink" title="后台启动"></a>后台启动</h4><p><code>/soft/elasticsearch/bin/elasticsearch -d</code></p><p><a href="https://www.cnblogs.com/sky-k/p/9379513.html">常见报错</a></p><h4 id="安装head"><a href="#安装head" class="headerlink" title="安装head"></a>安装head</h4><p>不要放在plugins文件夹<br>默认端口9100<br>需要安装jdk11 </p><p>修改/soft/elasticsearch/bin/elasticsearch 指定jdk版本<br><a href="https://www.jianshu.com/p/6ddeae547f45">参考文档</a><br>修改/soft/elasticsearch/config/jvm.options 将 ： -XX:+UseConcMarkSweepGC（这是jdk8默认的垃圾回收器）改为：-XX:+UseG1GC（这是jdk11默认的）<br>cd /soft/bak<br>否则报错:Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release<br><a href="https://download.oracle.com/otn/java/jdk/8u144-b01/090f390dda5b47b9b721c7dfaa008135/jdk-8u144-linux-x64.tar.gz?AuthParam=1569315639_ee4628ba571f3e925ee7cf73103e0f76">参考文档</a></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://github.com/mobz/elasticsearch-head/archive/master.zip<span class="token function">unzip</span> master.zip<span class="token function">mv</span> elasticsearch-head-master /soft/elasticsearch/yum <span class="token function">install</span> <span class="token function">npm</span><span class="token builtin class-name">cd</span> /soft/elasticsearch/plugins/elasticsearch-head<span class="token function">npm</span> <span class="token function">install</span> -g cnpm --registry<span class="token operator">=</span>https://registry.npm.taobao.orgcnpm <span class="token function">install</span><span class="token comment">#SPDX报错修改package.json找到license位置，原来的Apache内容修改为Apache-2.0</span></code></pre><h4 id="Elasticsearch配置-允许跨域访问"><a href="#Elasticsearch配置-允许跨域访问" class="headerlink" title="Elasticsearch配置,允许跨域访问"></a>Elasticsearch配置,允许跨域访问</h4><p>vi elasticsearch-7.1.1/config/elasticsearch.yml<br>#添加如下配置，支持跨域访问</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">http.cors.enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">http.cors.allow-origin</span><span class="token punctuation">:</span> <span class="token string">"*"</span></code></pre><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/elasticsearch-head/<span class="token function">npm</span> <span class="token function">install</span><span class="token function">nohup</span> <span class="token function">npm</span> run start <span class="token operator">&amp;</span></code></pre><p>访问head : <a href="http://47.95.196.16:19100/">http://47.95.196.16:19100/</a></p><p>安装phantomjs</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bakhttps://github.com/ariya/phantomjs/archive/2.1.1.tar.gz<span class="token function">tar</span> zxvf <span class="token number">2.1</span>.1.tar.gz<span class="token function">mv</span> /soft/bak/phantomjs-2.1.1 /soft/phantomjs<span class="token builtin class-name">cd</span> /soft/phantomjsyum -y <span class="token function">install</span> fontconfig</code></pre><h4 id="安装ik"><a href="#安装ik" class="headerlink" title="安装ik"></a>安装ik</h4><p><a href="https://blog.csdn.net/vitaair/article/details/79912266">参考文档</a><br>下载插件 wget <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases%E6%9C%80%E6%96%B0%E7%89%88.zip">https://github.com/medcl/elasticsearch-analysis-ik/releases最新版.zip</a><br>/soft/elasticsearch/bin/elasticsearch-plugins install /soft/bak/xxx.zip(待验证是否可用)<br>将最新版.zip解压至/soft/elasticsearch/plugins/ik<br>启动elasticsearch</p><h4 id="安装kibana"><a href="#安装kibana" class="headerlink" title="安装kibana"></a>安装kibana</h4><p>默认端口5601<br><a href="https://blog.csdn.net/yelllowcong/article/details/78792397">参考文档</a><br>中文版只需要在配置文件 kibana.yml 中加入i18n.locale: “zh-CN”</p><h4 id="关闭kibana"><a href="#关闭kibana" class="headerlink" title="关闭kibana"></a>关闭kibana</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">fuser</span> -n tcp <span class="token number">5601</span><span class="token function">kill</span> -9 xxx </code></pre><h4 id="启动kibana"><a href="#启动kibana" class="headerlink" title="启动kibana"></a>启动kibana</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/kibana<span class="token function">nohup</span> /soft/kibana/bin/kibana <span class="token operator">&amp;</span></code></pre><h4 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h4><p>wget <a href="https://artifacts.elastic.co/downloads/logstash/logstash-7.3.2.tar.gz">https://artifacts.elastic.co/downloads/logstash/logstash-7.3.2.tar.gz</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装rsync</title>
      <link href="/2020/10/23/an-zhuang-rsync/"/>
      <url>/2020/10/23/an-zhuang-rsync/</url>
      
        <content type="html"><![CDATA[<h4 id="安装rsync"><a href="#安装rsync" class="headerlink" title="安装rsync"></a>安装rsync</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> https://download.samba.org/pub/rsync/rsync-3.2.3.tar.gz<span class="token function">tar</span> zxvf rsync-3.2.3.tar.gz<span class="token builtin class-name">cd</span> rsync-3.2.3./configure --prefix<span class="token operator">=</span>/soft/rsync  -disable-ipv6<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span></code></pre><h4 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h4><p><code>rsync  --daemon --config=/soft/rsync/rsync.conf &amp;</code></p><h4 id="拉取-or-推送"><a href="#拉取-or-推送" class="headerlink" title="拉取 or 推送"></a>拉取 or 推送</h4><p><code>rsync -e &#39;ssh -p 13193 -i /pem&#39; -avzh user@ip:/www/ /www/</code></p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装v2ray</title>
      <link href="/2020/10/23/an-zhuang-v2ray/"/>
      <url>/2020/10/23/an-zhuang-v2ray/</url>
      
        <content type="html"><![CDATA[<h4 id="安装v2ray"><a href="#安装v2ray" class="headerlink" title="安装v2ray"></a>安装v2ray</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> -L -s https://opt.cn2qq.com/opt-script/v2ray.sh<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> v2ray </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署ss</title>
      <link href="/2020/10/23/bu-shu-ss/"/>
      <url>/2020/10/23/bu-shu-ss/</url>
      
        <content type="html"><![CDATA[<h4 id="部署ss"><a href="#部署ss" class="headerlink" title="部署ss"></a>部署ss</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token string">"https://bootstrap.pypa.io/get-pip.py"</span> -o <span class="token string">"get-pip.py"</span>python get-pip.pyyum <span class="token function">install</span> python3-pippip <span class="token function">install</span> --upgrade pippip <span class="token function">install</span> shadowsocks<span class="token function">vi</span> /etc/shadowsocks.jsonssserver -c /etc/shadowsocks.json -d start</code></pre><p>vi /etc/shadowsocks.json</p><pre class="language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span><span class="token property">"server"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span><span class="token property">"server_port"</span><span class="token operator">:</span><span class="token number">39002</span> <span class="token punctuation">,</span><span class="token property">"password"</span><span class="token operator">:</span> <span class="token string">"chenliang"</span><span class="token punctuation">,</span><span class="token property">"method"</span><span class="token operator">:</span> <span class="token string">"aes-256-cfb"</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ss </tag>
            
            <tag> 影梭 </tag>
            
            <tag> shadowsorcks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-composer</title>
      <link href="/2020/10/23/docker-composer/"/>
      <url>/2020/10/23/docker-composer/</url>
      
        <content type="html"><![CDATA[<h4 id="docker-composer"><a href="#docker-composer" class="headerlink" title="docker-composer"></a>docker-composer</h4><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> docker<span class="token comment">#安装pip</span>yum -y <span class="token function">install</span> epel-releaseyum <span class="token function">install</span> python-pippip <span class="token function">install</span> --upgrade pippip <span class="token function">install</span> docker-compose<span class="token function">ln</span> -s /usr/bin/docker-compose /usr/local/bin/docker-composer versionsystemctl start dockerdocker-compose up<span class="token comment">#*一但关联了软件的配置文件至宿主机，镜像中可能被删除</span><span class="token comment">#docker-compose中注释可能会因为编码（gb/utf8）失效 pip安装则不会存在该问题</span><span class="token comment">#需要将nginx/mysql/php配置文件提前copy出来 否则容器会报错一直重启</span><span class="token comment">#查看所有容器ip</span><span class="token comment">#docker inspect --format='&#123;&#123;.Name&#125;&#125; - &#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;' $(docker ps -aq)</span></code></pre><p>docker-composer.yaml</p><pre class="language-bash" data-language="bash"><code class="language-bash">version: <span class="token string">'3'</span>networks:lnmp-net:driver: bridgeservices:mariadb:container_name: mariadbimage: mariadb:10.4ports:- <span class="token number">3306</span>:3306environment:MYSQL_ROOT_PASSWORD: <span class="token string">'@powerglq'</span>volumes:- /docker-service/mariadb/db:/var/lib/mysql- /docker-service/mariadb/conf:/etc/mysql- /docker-service/mariadb/log:/var/log/mariadbrestart: alwaysnetworks:- lnmp-netnginx:container_name: nginximage: nginx:stableports:- <span class="token number">80</span>:80- <span class="token number">443</span>:443volumes:- /docker-service/www:/usr/share/nginx/html- /docker-service/nginx/nginx:/etc/nginx- /docker-service/nginx/log:/var/log/nginxdepends_on:- mariadb- redis- phpenvironment:- <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghairestart: alwaysnetworks:- lnmp-netphp:container_name: phpimage: php:7.3-fpmvolumes:- /docker-service/www:/usr/share/nginx/html- /docker-service/php/php:/usr/local/etc- /docker-service/php/log:/usr/local/var/logstdin_open: <span class="token boolean">true</span>tty: <span class="token boolean">true</span>environment:- <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghairestart: alwaysnetworks:- lnmp-netredis:container_name: redisimage: redis:5.0.7ports:- <span class="token number">6379</span>:6379volumes:- /docker-service/redis/db:/var/lib/redis- /docker-service/redis/log:/var/log/redis- /docker-service/redis/redis:/usr/local/bincommand: /bin/bash -c <span class="token string">"redis-server /usr/local/bin/redis.conf"</span>environment:- <span class="token assign-left variable">TZ</span><span class="token operator">=</span>Asia/Shanghairestart: alwaysnetworks:- lnmp-net</code></pre><h4 id="修改容器映射端口"><a href="#修改容器映射端口" class="headerlink" title="修改容器映射端口"></a>修改容器映射端口</h4><p>宿主机/var/lib/docker/containers/容器名称/hostconfig.json 修改hostport</p><p>nginx<br>nginx/conf.d/default.conf配置<br>location ~ .php$ {<br>root           /usr/share/nginx/html;<br>fastcgi_pass   php:9000;<br>fastcgi_index  index.php;<br>fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;<br>include        fastcgi_params;<br>}</p><h4 id="php"><a href="#php" class="headerlink" title="php"></a>php</h4><p>设置php.ini<br>mv /docker-service/php/php/php/php.ini-production /docker-service/php/php/php<br>docker-php添加扩展<br>docker exec -it 999 /bin/bash<br>docker-php-ext-install pdo_mysql<br>#pecl install igbinary<br>#在php.ini添加 extension=igbinary.so<br>pecl install redis &amp;&amp; docker-php-ext-enable redis<br>询问是否开启扩展支持 输入no<br>在php.ini添加 extension=/usr/local/lib/php/extensions/no-debug-non-zts-20180731/igbinary.so<br>在php.ini添加 extension=/usr/local/lib/php/extensions/no-debug-non-zts-20180731/redis.so</p><h4 id="mariadb"><a href="#mariadb" class="headerlink" title="mariadb"></a>mariadb</h4><p>配置文件位置<br>/etc/mysql/my.cnf  数据库配置文件<br>查看端口命令 show global variables like ‘port’;<br>/etc/mysql/conf.d/docker.cnf 可用于忘记密码<br>忘记密码<br>docker cp mariadb:/etc/mysql/conf.d/docker.cnf ./docker.cnf<br>在docker.cnf添加skip-grant-tables<br>docker cp ./docker.cnf mariadb:/etc/mysql/conf.d/docker.cnf<br>登录mariadb mysql -uroot -p 无密码登录<br>flush privileges;<br>alter user ‘root’@’localhost’ identified by ‘123456’;<br>flush privileges;<br>在docker.cnf删除skip-grant-tables<br>docker-compose restart mariadb</p><h4 id="主主配置（双主）"><a href="#主主配置（双主）" class="headerlink" title="主主配置（双主）"></a>主主配置（双主）</h4><p>主机/从机分别在配置文件my.cnf中添加：<br>server-id=145 ##或者147不同主机的id唯一标识   docker每次重启可能从机都需要修改<br>log_bin =mysql-bin<br>relay-log = relay-mysql #开启二进制日志<br>relay-log-index =relay-mysql.index #开启中继日志<br>log_slave_updates=on<br>auto-increment-increment = 2<br>auto-increment-offset = 1 #从1开始 或者2开始 为避免id冲突 两台主机的起步要不同<br>在主机从机添加互访同步账号 分别执行<br>GRANT REPLICATION SLAVE ON <em>.</em> to ‘slave’@’%’ identified by ‘000000’;<br>分别执行<br>stop slave;<br>reset master;<br>reset slave;<br>show master status;<br>主机执行<br>change master to master_host=’172.31.0.5’,master_port=3306,master_user=’slave’,master_password=’000000’,master_log_file=’mariadb-slave-bin.000001’,master_log_pos=336;<br>从机执行<br>change master to master_host=’172.31.0.2’,master_port=3306,master_user=’slave’,master_password=’000000’,master_log_file=’mariadb-master-bin.000001’,master_log_pos=337;<br>分别执行<br>START SLAVE;<br>查看连接状态<br>show slave status \G;</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea全家桶食用(破解)方法</title>
      <link href="/2020/10/23/idea-quan-jia-tong-shi-yong-po-jie-fang-fa/"/>
      <url>/2020/10/23/idea-quan-jia-tong-shi-yong-po-jie-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>用idea编辑bin目录下的xxx64.exe.vmoptions<br>在最下面添加<br><code>-javaagent:E:\Program Files\JAVAIDEA\lib\jetbrains-agent.jar</code><br>确保lib目录下有jetbrains-agent.jar文件</p><p>激活码</p><pre class="language-conf" data-language="conf"><code class="language-conf">A82DEE284F-eyJsaWNlbnNlSWQiOiJBODJERUUyODRGIiwibGljZW5zZWVOYW1lIjoiaHR0cHM6Ly96aGlsZS5pbyIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiJVbmxpbWl0ZWQgbGljZW5zZSB0aWxsIGVuZCBvZiB0aGUgY2VudHVyeS4iLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiV1MiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJEQiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlJNIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiRE0iLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IkdPIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwODktMDctMDcifSx7ImNvZGUiOiJDTCIsInBhaWRVcFRvIjoiMjA4OS0wNy0wNyJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In0seyJjb2RlIjoiUlNVIiwicGFpZFVwVG8iOiIyMDg5LTA3LTA3In1dLCJoYXNoIjoiODkwNzA3MC8wIiwiZ3JhY2VQZXJpb2REYXlzIjowLCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-5epo90Xs7KIIBb8ckoxnB&#x2F;AZQ8Ev7rFrNqwFhBAsQYsQyhvqf1FcYdmlecFWJBHSWZU9b41kvsN4bwAHT5PiznOTmfvGv1MuOzMO0VOXZlc+edepemgpt+t3GUHvfGtzWFYeKeyCk+CLA9BqUzHRTgl2uBoIMNqh5izlDmejIwUHLl39QOyzHiTYNehnVN7GW5+QUeimTr&#x2F;koVUgK8xofu59Tv8rcdiwIXwTo71LcU2z2P+T3R81fwKkt34evy7kRch4NIQUQUno&#x2F;&#x2F;Pl3V0rInm3B2oFq9YBygPUdBUbdH&#x2F;KHROyohZRD8SaZJO6kUT0BNvtDPKF4mCT1saWM38jkw&#x3D;&#x3D;-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA5ndaik1GD0nyTdqkZgURQZGW+RGxCdBITPXIwpjhhaD0SXGa4XSZBEBoiPdY6XV6pOfUJeyfi9dXsY4MmT0D+sKoST3rSw96xaf9FXPvOjn4prMTdj3Ji3CyQrGWeQU2nzYqFrp1QYNLAbaViHRKuJrYHI6GCvqCbJe0LQ8qqUiVMA9wG&#x2F;PQwScpNmTF9Kp2Iej+Z5OUxF33zzm+vg&#x2F;nYV31HLF7fJUAplI&#x2F;1nM+ZG8K+AXWgYKChtknl3sW9PCQa3a3imPL9GVToUNxc0wcuTil8mqveWcSQCHYxsIaUajWLpFzoO2AhK4mfYBSStAqEjoXRTuj17mo8Q6M2SHOcwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl&#x2F;GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQBonMu8oa3vmNAa4RQP8gPGlX3SQaA3WCRUAj6Zrlk8AesKV1YSkh5D2l+yUk6njysgzfr1bIR5xF8eup5xXc4&#x2F;G7NtVYRSMvrd6rfQcHOyK5UFJLm+8utmyMIDrZOzLQuTsT8NxFpbCVCfV5wNRu4rChrCuArYVGaKbmp9ymkw1PU6+HoO5i2wU3ikTmRv8IRjrlSStyNzXpnPTwt7bja19ousk56r40SmlmC04GdDHErr0ei2UbjUua5kw71Qn9g02tL9fERI2sSRjQrvPbn9INwRWl5+k05mlKekbtbu2ev2woJFZK4WEXAd&#x2F;GaAdeZZdumv8T2idDFL7cAirJwcrbfpawPeXr52oKTPnXfi0l5+g9Gnt&#x2F;wfiXCrPElX6ycTR6iL3GC2VR4jTz6YatT4Ntz59&#x2F;THOT7NJQhr6AyLkhhJCdkzE2cob&#x2F;KouVp4ivV7Q3Fc6HX7eepHAAF&#x2F;DpxwgOrg9smX6coXLgfp0b1RU2u&#x2F;tUNID04rpNxTMueTtrT8WSskqvaJd3RH8r7cnRj6Y2hltkja82HlpDURDxDTRvv+krbwMr26SB&#x2F;40BjpMUrDRCeKuiBahC0DCoU&#x2F;4+ze1l94wVUhdkCfL0GpJrMSCDEK+XEurU18Hb7WT+ThXbkdl6VpFdHsRvqAnhR2g4b+Qzgidmuky5NUZVfEaZqV&#x2F;g&#x3D;&#x3D;</code></pre><p><a href="https://juejin.im/post/6844904111234613262">传送门</a><br><a href="http://taojingling.cn/Jet/cdkey.html#%E4%B8%80%E3%80%81%E6%BF%80%E6%B4%BB%E7%A0%81%E6%BF%80%E6%B4%BB">传送后门</a></p>]]></content>
      
      
      <categories>
          
          <category> 食用方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> IntelliJ IDEA </tag>
            
            <tag> WebStorm </tag>
            
            <tag> PhpStorm </tag>
            
            <tag> PyCharm </tag>
            
            <tag> 食用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地生成ssl证书</title>
      <link href="/2020/10/23/ben-di-sheng-cheng-ssl-zheng-shu/"/>
      <url>/2020/10/23/ben-di-sheng-cheng-ssl-zheng-shu/</url>
      
        <content type="html"><![CDATA[<h4 id="本地生成ssl证书"><a href="#本地生成ssl证书" class="headerlink" title="本地生成ssl证书"></a>本地生成ssl证书</h4><pre class="language-bash" data-language="bash"><code class="language-bash">openssl genrsa -des3 -out server.key <span class="token number">2048</span>openssl rsa -in server.key -out server.keyopenssl req -new -key server.key -out server.csropenssl req -new -x509 -key server.key -out ca.crt -days <span class="token number">3650</span>openssl x509 -req -days <span class="token number">3650</span> -in server.csr -CA ca.crt -CAkey server.key -CAcreateserial -out server.crt</code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openssl </tag>
            
            <tag> ssl证书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS初始化</title>
      <link href="/2020/10/23/vps-chu-shi-hua/"/>
      <url>/2020/10/23/vps-chu-shi-hua/</url>
      
        <content type="html"><![CDATA[<h4 id="VPS初始化"><a href="#VPS初始化" class="headerlink" title="VPS初始化"></a>VPS初始化</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment">#google cloud需关闭SELinux</span><span class="token builtin class-name">cd</span> /<span class="token function">mkdir</span> /soft<span class="token function">mkdir</span> /soft/bakyum update<span class="token function">mkdir</span> /www<span class="token function">sed</span> -ie <span class="token string">'1c#!/usr/bin/python2.7 -Es'</span> /usr/sbin/semanage<span class="token builtin class-name">echo</span> <span class="token string">"---------安装常用工具---------"</span>yum <span class="token function">install</span> -y <span class="token function">git</span> <span class="token function">wget</span> <span class="token function">curl</span> gcc <span class="token function">zip</span> <span class="token function">unzip</span> <span class="token builtin class-name">echo</span> <span class="token string">"---------配置防火墙---------"</span>firewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">80</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">443</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">7000</span>-9000/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">13193</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">13306</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">26379</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">39002</span>/tcpfirewall-cmd --zone<span class="token operator">=</span>public --permanent --add-port<span class="token operator">=</span><span class="token number">50000</span>-51000/tcp<span class="token comment">#删除端口</span><span class="token comment">#firewall-cmd --zone=public --permanent --remove-port=13306/tcp</span>systemctl restart firewalld/usr/sbin/sestatus -v <span class="token comment">#关闭selinux 重启生效</span><span class="token function">sed</span> -i <span class="token string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/configsemanage port --add -t rsync_port_t -p tcp <span class="token number">80</span>semanage port --add -t http_port_t -p tcp <span class="token number">443</span>semanage port --add -t winshadow_port_t -p tcp <span class="token number">7000</span>-9000semanage port --add -t ssh_port_t -p tcp <span class="token number">13193</span>semanage port --add -t mysqld_port_t -p tcp <span class="token number">13306</span>semanage port --add -t redis_port_t -p tcp <span class="token number">26379</span>semanage port --add -t redis_port_t -p tcp <span class="token number">39002</span>semanage port --add -t http_port_t -p tcp <span class="token number">50000</span>-51000<span class="token comment">#删除某端口</span><span class="token comment">#semanage port --delete -t ssh_port_t -p tcp 600</span><span class="token comment">#查看所有已开放端口</span>firewall-cmd --zone<span class="token operator">=</span>public --list-ports<span class="token builtin class-name">echo</span> <span class="token string">"---------配置SSH远程登录---------"</span><span class="token comment">#非root用户慎用.ssh远程配置 可能因为权限问题导致不能登录 例如google cloud</span><span class="token comment">#mv /www/.ssh ~/</span><span class="token comment">#chmod 700 ~/.ssh</span><span class="token comment">#chmod 600 ~/.ssh/authorized_keys</span><span class="token comment">#mv -f /www/sshd_config /etc/ssh/sshd_config</span><span class="token function">sed</span> -i <span class="token string">'s/#Port 22/Port 13193/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/RSAAuthentication no/RSAAuthentication yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/#PubkeyAuthentication yes/PubkeyAuthentication yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/PubkeyAuthentication no/PubkeyAuthentication yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/PermitRootLogin no/PermitRootLogin yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/#PasswordAuthentication yes/PasswordAuthentication yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/PasswordAuthentication no/PasswordAuthentication yes/'</span> /etc/ssh/sshd_config<span class="token function">sed</span> -i <span class="token string">'s/#ClientAliveInterval 0/ClientAliveInterval 60/'</span> /etc/ssh/sshd_configsystemctl restart sshd<span class="token function">sed</span> -i <span class="token string">'s/SELINUX=enforcing/SELINUX=disabled/'</span> /etc/selinux/config<span class="token builtin class-name">echo</span> <span class="token string">"---------禁ping---------"</span><span class="token builtin class-name">echo</span> <span class="token string">"net.ipv4.icmp_echo_ignore_all=1"</span> <span class="token operator">>></span> /etc/sysctl.confsysctl -p</code></pre><h4 id="更新软件源为阿里云源"><a href="#更新软件源为阿里云源" class="headerlink" title="更新软件源为阿里云源"></a>更新软件源为阿里云源</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo_bak<span class="token function">wget</span> -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repoyum makecache </code></pre><h4 id="putty本地生成密钥"><a href="#putty本地生成密钥" class="headerlink" title="putty本地生成密钥"></a>putty本地生成密钥</h4><p>key comment 框内容为用户名 可任意修改<br>复制上框内容至金轮<br>保存私钥</p><p>#修改主机名<br>hostnamectl set-hostname xxx</p><h4 id="修改时间及时区"><a href="#修改时间及时区" class="headerlink" title="修改时间及时区"></a>修改时间及时区</h4><p>*修改时间<br>date -s “2020-09-02 21:21:21”<br>#hwclock –systohc 用于共享vps时间同步<br>*临时修改系统时区<br>tzselect然后选择 亚洲(5) -&gt; 中国(9) -&gt; 北京(1)，然后运行TZ=’Asia/Shanghai’; export TZ，重新登录或者等一会<br>*永久修改<br>cp -rf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</p><h4 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h4><p>yum install glances htop lsof net-tools nmap</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vps </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署酸酸乳</title>
      <link href="/2020/10/23/bu-shu-suan-suan-ru/"/>
      <url>/2020/10/23/bu-shu-suan-suan-ru/</url>
      
        <content type="html"><![CDATA[<h4 id="部署酸酸乳"><a href="#部署酸酸乳" class="headerlink" title="部署酸酸乳"></a>部署酸酸乳</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft<span class="token function">git</span> clone -b manyuser https://github.com/shadowsocksrr/shadowsocksr.git /www/shadowsocksr<span class="token function">sed</span> -ri -e <span class="token string">'s#("user": "|"password": "|"db": ").*(")#<span class="token entity" title="\1">\1</span>ssrpanel<span class="token entity" title="\2">\2</span>#'</span> -e <span class="token string">'s#("node_id": ).*(,)#<span class="token entity" title="\11">\11</span><span class="token entity" title="\2">\2</span>#'</span> /www/shadowsocksr/mysql.json<span class="token comment">#/soft/shadowsocksr/mysql.json 修改数据库信息及节点编号</span><span class="token builtin class-name">cd</span> /www/shadowsocksr/./setup_cymysql.sh./initcfg.sh<span class="token function">sed</span> -ri <span class="token string">"s#(API_INTERFACE = ').*(')#<span class="token entity" title="\1">\1</span>glzjinmod<span class="token entity" title="\2">\2</span>#"</span> userapiconfig.py<span class="token comment">#python server.py 测试</span><span class="token builtin class-name">echo</span> <span class="token string">"[Unit]Description=ShadowsocksR serverAfter=syslog.targetAfter=network.target[Service]LimitCORE=infinityLimitNOFILE=512000LimitNPROC=512000Type=simpleWorkingDirectory=/soft/shadowsocksrExecStart=/usr/bin/python /soft/shadowsocksr/server.pyExecReload=/bin/kill -s HUP <span class="token variable">$MAINPID</span>ExecStop=/bin/kill -s TERM <span class="token variable">$MAINPID</span>Restart=always[Install]WantedBy=multi-user.targetAlias=ssr"</span> <span class="token operator">></span> /etc/systemd/system/shadowsocksr.service</code></pre><blockquote><p>systemctl start shadowsocksr<br>systemctl enable shadowsocksr</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> proxy </tag>
            
            <tag> ssr </tag>
            
            <tag> 酸酸乳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装redis5.0.9</title>
      <link href="/2020/10/23/an-zhuang-redis5-0-9/"/>
      <url>/2020/10/23/an-zhuang-redis5-0-9/</url>
      
        <content type="html"><![CDATA[<h4 id="安装redis5-0-9"><a href="#安装redis5-0-9" class="headerlink" title="安装redis5.0.9"></a>安装redis5.0.9</h4><p>6.0需要升级gcc 避免麻烦 暂且用5.0</p><pre class="language-bash" data-language="bash"><code class="language-bash">yum -y <span class="token function">install</span> gcc automake autoconf libtool tcl<span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> http://download.redis.io/releases/redis-5.0.9.tar.gz<span class="token function">tar</span> zxvf redis-5.0.9.tar.gz<span class="token function">mv</span> redis-5.0.9 /soft/redis<span class="token builtin class-name">cd</span> /soft/redis<span class="token function">make</span><span class="token function">cp</span> /soft/redis/utils/redis_init_script /etc/init.d/redisd<span class="token function">sed</span> -i <span class="token string">'s/bind 127.0.0.1/bind 0.0.0.0/'</span> /soft/redis/redis.conf<span class="token function">sed</span> -i <span class="token string">'s/port 6379/port 26379/'</span> /soft/redis/redis.conf<span class="token function">sed</span> -i <span class="token string">'s/# requirepass foobared/requirepass @powerglq/'</span> /soft/redis/redis.conf<span class="token function">sed</span> -i <span class="token string">'s/protected-mode yes/protected-mode no/'</span> /soft/redis/redis.conf<span class="token function">sed</span> -i <span class="token string">'s/daemonize no/daemonize yes/'</span> /soft/redis/redis.conf<span class="token function">sed</span> -i <span class="token string">'s#CONF="/etc/redis/<span class="token variable">$&#123;REDISPORT&#125;</span>.conf"#CONF="/soft/redis/redis.conf"#'</span> /soft/redis/utils/redis_init_script<span class="token function">sed</span> -i <span class="token string">'s#CONF="/etc/redis/<span class="token variable">$&#123;REDISPORT&#125;</span>.conf"#CONF="/soft/redis/redis.conf"#'</span> /etc/init.d/redisd</code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
            <tag> redis5.0.9 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装mariadb10.4</title>
      <link href="/2020/10/23/an-zhuang-mariadb10-4/"/>
      <url>/2020/10/23/an-zhuang-mariadb10-4/</url>
      
        <content type="html"><![CDATA[<h4 id="安装mariadb10-4"><a href="#安装mariadb10-4" class="headerlink" title="安装mariadb10.4"></a>安装mariadb10.4</h4><p><a href="https://downloads.mariadb.org/mariadb/repositories/#distro=CentOS&distro_release=centos7-amd64--centos7&mirror=tuna&version=10.4">下载地址</a></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">touch</span> /etc/yum.repos.d/mariadb.repo<span class="token builtin class-name">echo</span> <span class="token string">"# MariaDB 10.4 CentOS repository list - created 2020-10-23 08:02 UTC# http://downloads.mariadb.org/mariadb/repositories/[mariadb]name = MariaDBbaseurl = http://yum.mariadb.org/10.4/centos7-amd64gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDBgpgcheck=1"</span> <span class="token operator">></span> /etc/yum.repos.d/mariadb.repoyum <span class="token function">install</span> -y MariaDB-server MariaDB-client<span class="token function">sed</span> -i <span class="token string">'s/#bind-address=0.0.0.0/bind-address=0.0.0.0/'</span> /etc/my.cnf.d/server.cnfsystemctl start mariadb.service<span class="token comment">#通过systemctl list-unit-files --type=service查看服务名 或者是mysql.service 有可能是 mariadb.service 也有可能被disable</span><span class="token comment">#/usr/bin/mysql_secure_installation</span><span class="token comment">#systemctl enable mariadb</span><span class="token comment">#systemctl restart mariadb</span><span class="token comment">#mysql -uroot -p</span><span class="token comment">#CREATE DATABASE ssrpanel;</span><span class="token comment">#use ssrpanel;</span><span class="token comment">#source /www/ssrpanel/ssrpanel.sql;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mariadb </tag>
            
            <tag> mariadb10.4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装python3</title>
      <link href="/2020/10/23/an-zhuang-python3/"/>
      <url>/2020/10/23/an-zhuang-python3/</url>
      
        <content type="html"><![CDATA[<h4 id="安装python3"><a href="#安装python3" class="headerlink" title="安装python3"></a>安装python3</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bakyum -y <span class="token function">install</span> libffi-devel gcc automake autoconf libtool <span class="token function">make</span> zlib*<span class="token function">wget</span> https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz<span class="token function">tar</span> xvf /soft/bak/Python-3.7.1.tgz<span class="token builtin class-name">cd</span>  /soft/bak/Python-3.7.1./configure --prefix<span class="token operator">=</span>/soft/python3<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">mv</span> /usr/bin/python /usr/bin/python_bk<span class="token function">cp</span> /soft/python3/bin/python3.7 /usr/bin/python<span class="token function">sed</span> -ie <span class="token string">'1c#!/usr/bin/python2.7'</span> /usr/bin/yum<span class="token function">sed</span> -ie <span class="token string">'1c#!/usr/bin/python2.7'</span> /usr/libexec/urlgrabber-ext-downyum <span class="token function">install</span> -y openssl-devel python3-pippip3 <span class="token function">install</span> --upgrade pip<span class="token builtin class-name">echo</span> <span class="token string">"===>修改yum等文件的python版本"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装php-composer</title>
      <link href="/2020/10/23/an-zhuang-php-composer/"/>
      <url>/2020/10/23/an-zhuang-php-composer/</url>
      
        <content type="html"><![CDATA[<h4 id="安装php-composer"><a href="#安装php-composer" class="headerlink" title="安装php-composer"></a>安装php-composer</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> -sS https://getcomposer.org/installer <span class="token operator">|</span> php<span class="token function">mv</span> composer.phar /usr/bin/composer<span class="token function">chmod</span> -R <span class="token number">777</span> /usr/bin/composer<span class="token function">composer</span> config repo.packagist <span class="token function">composer</span> https://packagist.phpcomposer.com<span class="token builtin class-name">cd</span> 项目目录<span class="token function">mkdir</span> vendor</code></pre>]]></content>
      
      
      <categories>
          
          <category> 扩展 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> composer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装php-mongodb扩展</title>
      <link href="/2020/10/23/an-zhuang-php-mongodb-kuo-zhan/"/>
      <url>/2020/10/23/an-zhuang-php-mongodb-kuo-zhan/</url>
      
        <content type="html"><![CDATA[<h4 id="安装php-mongodb扩展"><a href="#安装php-mongodb扩展" class="headerlink" title="安装php-mongodb扩展"></a>安装php-mongodb扩展</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> https://pecl.php.net/get/mongodb-1.6.0.tgz<span class="token function">tar</span> zxvf mongodb-1.6.0.tgz<span class="token builtin class-name">cd</span> /soft/bak/mongodb-1.6.0phpize./configure --with-php-config<span class="token operator">=</span>/usr/bin/php-config<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">touch</span> /etc/php.d/mongodb.ini<span class="token builtin class-name">echo</span> -e <span class="token string">"; Enable mongodb extension module<span class="token entity" title="\n">\n</span>extension=mongodb.so"</span> <span class="token operator">></span> /etc/php.d/mongodb.ini<span class="token function">pkill</span> php-fpmphp-fpmphp-m <span class="token comment">#验证是否已加载</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> php-mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php安装redis扩展</title>
      <link href="/2020/10/23/an-zhuang-php-redis-kuo-zhan/"/>
      <url>/2020/10/23/an-zhuang-php-redis-kuo-zhan/</url>
      
        <content type="html"><![CDATA[<h4 id="安装php-redis扩展"><a href="#安装php-redis扩展" class="headerlink" title="安装php-redis扩展"></a>安装php-redis扩展</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> https://pecl.php.net/get/redis-5.3.1.tgz<span class="token function">tar</span> zxvf redis-5.3.1.tgz<span class="token builtin class-name">cd</span> /soft/bak/redis-5.3.1phpize./configure --with-php-config<span class="token operator">=</span>/usr/bin/php-config<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">touch</span> /etc/php.d/redis.ini<span class="token builtin class-name">echo</span> -e <span class="token string">"; Enable redis extension module<span class="token entity" title="\n">\n</span>extension=redis.so"</span> <span class="token operator">></span> /etc/php.d/redis.ini<span class="token function">pkill</span> php-fpmphp-fpmphp-m <span class="token comment">#验证是否已加载</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> php-redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php7.2安装</title>
      <link href="/2020/10/23/php7-2-an-zhuang/"/>
      <url>/2020/10/23/php7-2-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h4 id="php7-2安装"><a href="#php7-2安装" class="headerlink" title="php7.2安装"></a>php7.2安装</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">rpm</span> -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm<span class="token function">rpm</span> -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpmyum <span class="token function">install</span> php72w-fpm php72w-gd php72w php72w-mysqlnd php72w-pdo php72w-mcrypt php72w-mbstring php72w-xmlrpc php72w-bcmath php72w-xml php72w-devel -y<span class="token function">sed</span> -i <span class="token string">'s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/'</span> /etc/php.ini<span class="token function">groupadd</span> nginx<span class="token function">useradd</span> -g nginx nginx<span class="token function">sed</span> -i -e <span class="token string">'/nobody/ s/;//'</span> -e <span class="token string">'s/apache\|nobody/nginx/g'</span> /etc/php-fpm.d/www.confsystemctl start php-fpmsystemctl <span class="token builtin class-name">enable</span> php-fpm</code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> php7.2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php7.4安装</title>
      <link href="/2020/10/23/php7.4-an-zhuang/"/>
      <url>/2020/10/23/php7.4-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h4 id="php7-4安装-方法一"><a href="#php7-4安装-方法一" class="headerlink" title="php7.4安装 (方法一)"></a>php7.4安装 (方法一)</h4><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y yum-plugin-priorities dnfdnf updateyum <span class="token function">install</span> -y https://rpms.remirepo.net/enterprise/remi-release-7.rpmyum <span class="token function">install</span> -y https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7Serveryum <span class="token function">install</span> -y php74 php74-php-fpm php74-php-develyum <span class="token function">install</span> -y php-xxx   xxx为扩展包  安装后重启php-fpmphp --modules  查看已启用的模块</code></pre><p>将php及php-fpm添加到/etc/profile<br>vi /etc/profile</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/opt/remi/php74/root/usr/bin:/opt/remi/php74/root/usr/sbin:/soft/nginx/sbin<span class="token comment">#export PATH=/opt/remi/php74/root/usr/bin:$PATH </span></code></pre><p>source /etc/profile</p><hr><h4 id="php7-4编译安装-方法二"><a href="#php7-4编译安装-方法二" class="headerlink" title="php7.4编译安装 (方法二)"></a>php7.4编译安装 (方法二)</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> https://www.php.net/distributions/php-7.4.0.tar.gzyum <span class="token function">install</span> -y gcc gcc-c++ <span class="token function">make</span> cmake bison autoconf <span class="token function">wget</span> lrzsz libtool libtool-ltdl-devel freetype-devel libjpeg.x86_64 libjpeg-devel libpng-devel gd-devel python-devel patch <span class="token function">sudo</span> openssl* openssl openssl-devel ncurses-devel bzip* <span class="token function">bzip2</span> <span class="token function">unzip</span> zlib-devel libevent* libxml* libxml2-devel libcurl* curl-devel readline-devel sqlite-devel  oniguruma oniguruma-devel<span class="token builtin class-name">cd</span> php-7.4.0./configure --prefix<span class="token operator">=</span>/soft/php <span class="token punctuation">\</span>  --with-config-file-scan-dir<span class="token operator">=</span>/soft/php/etc/ <span class="token punctuation">\</span>  --with-mhash --with-pdo-mysql <span class="token punctuation">\</span>  --with-openssl --with-mysqli <span class="token punctuation">\</span>  --with-iconv --with-zlib <span class="token punctuation">\</span>  --enable-inline-optimization <span class="token punctuation">\</span>  --disable-debug --disable-rpath <span class="token punctuation">\</span>  --enable-shared --enable-xml <span class="token punctuation">\</span>  --enable-bcmath --enable-shmop <span class="token punctuation">\</span>  --enable-sysvsem --enable-sysvshm --enable-mbregex <span class="token punctuation">\</span>  --enable-mbstring --enable-ftp <span class="token punctuation">\</span>  --enable-pcntl --enable-sockets <span class="token punctuation">\</span>  --with-xmlrpc --enable-soap <span class="token punctuation">\</span>  --without-pear --with-gettext <span class="token punctuation">\</span>  --enable-session --with-curl <span class="token punctuation">\</span>  --enable-opcache --enable-fpm <span class="token punctuation">\</span>  --without-gdbm --enable-fast-install <span class="token punctuation">\</span>  --disable-fileinfo<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">cp</span> ~/php-7.4.0/php.ini-production /soft/php/etc/php.ini<span class="token function">cp</span> /soft/php/etc/php-fpm.conf.default /soft/php/etc/php-fpm.conf<span class="token function">cp</span> /soft/php/etc/php-fpm.d/www.conf.default /soft/php/etc/php-fpm.d/www.conf</code></pre><p>修改php.ini<br><code>vim /soft/php/etc/php.ini</code></p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">;不显示错误，默认</span><span class="token constant">display_errors</span> <span class="token attr-value"><span class="token punctuation">=</span> Off</span><span class="token comment">;在关闭display_errors后开启PHP错误日志（路径在php-fpm.conf中配置），默认</span><span class="token constant">log_errors</span> <span class="token attr-value"><span class="token punctuation">=</span> On</span><span class="token comment">;字符集，默认</span><span class="token constant">default_charset</span> <span class="token attr-value"><span class="token punctuation">=</span> "UTF-8"</span><span class="token comment">;文件上传大小，默认值太小，建议修改10M</span><span class="token constant">upload_max_filesize</span> <span class="token attr-value"><span class="token punctuation">=</span> 2M</span><span class="token comment">;Maximum size of POST data that PHP will accept. 表单最大值，默认是8M，如果表单含有多图上传，大小可能不够。超过该大小后台收不到 表单数据</span><span class="token constant">post_max_size</span> <span class="token attr-value"><span class="token punctuation">=</span> 8M</span><span class="token comment">;设置PHP的扩展库路径，默认被注释了，之后一个文件夹 于 你/usr/local/php/lib/php/extensions/ 下的文件夹同名。</span><span class="token constant">extension_dir</span> <span class="token attr-value"><span class="token punctuation">=</span> "/usr/local/php/lib/php/extensions/no-debug-non-zts-20151012/"</span><span class="token comment">;设置PHP的时区</span><span class="token constant">date.timezone</span> <span class="token attr-value"><span class="token punctuation">=</span> shanghai</span><span class="token comment">;开启opcache，默认是0</span><span class="token selector">[opcache]</span><span class="token comment">; Determines if Zend OPCache is enabled</span><span class="token constant">opcache.enable</span><span class="token attr-value"><span class="token punctuation">=</span>1</span></code></pre><p>修改php-fpm 的配置文件 php-fpm.conf<br><code>vim /soft/php/etc/php-fpm.conf</code></p><pre class="language-conf" data-language="conf"><code class="language-conf">; 去掉里分号，方便以后重启。建议修改;Default Value: none; 下面的值最终目录是&#x2F;usr&#x2F;local&#x2F;php&#x2F;var&#x2F;run&#x2F;php-fpm.pid; 开启后可以平滑重启php-fpmpid &#x3D; run&#x2F;php-fpm.pid; 设置错误日志的路径，可以默认值; Note: the default prefix is &#x2F;usr&#x2F;local&#x2F;php&#x2F;var; Default Value: log&#x2F;php-fpm.log, 即&#x2F;usr&#x2F;local&#x2F;php&#x2F;var&#x2F;log&#x2F;php-fpm.logerror_log &#x3D; &#x2F;var&#x2F;log&#x2F;php-fpm&#x2F;error.log; Log等级，可以默认值; Possible Values: alert, error, warning, notice, debug; Default Value: noticelog_level &#x3D; notice; 后台运行，默认yes，可以默认值; Default Value: yes;daemonize &#x3D; yes; 引入www.conf文件中的配置，可以默认值include&#x3D;&#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;php-fpm.d&#x2F;*.conf</code></pre><p>修改 <a href="http://www.conf/">www.conf</a><br><code>vim /soft/php/etc/php.ini</code></p><pre class="language-ini" data-language="ini"><code class="language-ini"><span class="token comment">; 设置用户和用户组，默认都是nobody。可以默认值</span><span class="token constant">user</span> <span class="token attr-value"><span class="token punctuation">=</span> nginx</span><span class="token constant">group</span> <span class="token attr-value"><span class="token punctuation">=</span> nginx</span><span class="token comment">; 设置PHP监听</span><span class="token comment">; 下面是默认值，不建议使用。可以默认值</span><span class="token constant">listen</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1:9000</span><span class="token comment">; 根据nginx.conf中的配置fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;</span><span class="token comment">;listen = /var/run/php-fpm/php-fpm.sock</span><span class="token comment">######开启慢日志。可以默认值</span><span class="token constant">slowlog</span> <span class="token attr-value"><span class="token punctuation">=</span> /var/log/php-fpm/$pool-slow.log</span><span class="token constant">request_slowlog_timeout</span> <span class="token attr-value"><span class="token punctuation">=</span> 10s</span>/soft/php/sbin/php-fpm -t    # php-fpm检测配置文件是否正确/soft/php/sbin/php-fpm     # php-fpm启动kill -INT `cat /soft/php/var/run/php-fpm.pid`   # php-fpm关闭kill -USR2 `cat /soft/php/var/run/php-fpm.pid`   #php-fpm平滑重启</code></pre><p>将php及php-fpm添加到/etc/profile<br><code>vi /etc/profile</code></p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/soft/php/bin</code></pre><p>source /etc/profile</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> php7.4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx安装</title>
      <link href="/2020/10/23/nginx-an-zhuang/"/>
      <url>/2020/10/23/nginx-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h4 id="安装openssl-nginx开启tsl1-3"><a href="#安装openssl-nginx开启tsl1-3" class="headerlink" title="安装openssl nginx开启tsl1.3"></a>安装openssl nginx开启tsl1.3</h4><p><a href="https://ilouis.cn/centos/upgrade_openssl.html">参考1</a>   <a href="https://ilouis.cn/practice/nginx_enable_tls_1_3.html">参考2</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> -y gcc gcc-c++ perl pcre-devel openssl openssl-devel<span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> https://www.openssl.org/source/openssl-1.1.1g.tar.gz<span class="token function">tar</span> zxvf openssl-1.1.1g.tar.gz<span class="token function">mv</span> openssl-1.1.1g /soft/openssl<span class="token builtin class-name">cd</span> /soft/openssl./config<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">ln</span> -s /usr/local/lib64/libssl.so.1.1 /usr/lib64/<span class="token function">ln</span> -s /usr/local/lib64/libcrypto.so.1.1 /usr/lib64/openssl version</code></pre><hr><h4 id="安装ngx-brotli"><a href="#安装ngx-brotli" class="headerlink" title="安装ngx_brotli"></a>安装ngx_brotli</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft<span class="token function">git</span> clone https://github.com/google/ngx_brotli.git<span class="token builtin class-name">cd</span> /soft/ngx_brotli<span class="token function">git</span> submodule update --init</code></pre><hr><h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><p><a href="https://www.nginx.cn/install">官方安装方法</a><br><a href="https://www.cnblogs.com/jinjiyese153/p/13396918.html">安装TSL1.3 泛域名证书</a><br>分别为每个域名手工生成证书<br><code>certbot certonly --nginx --nginx-server-root=/soft/nginx/conf</code><br>尽量保证页面中全部连接使用https 例如js/css等 否则在监控台和地址栏证书位置可能会报错<br>-j2表示两个线程并行 提高编译效率 但是对makefile文件有要求 必须依赖关系明确 否则某一线程会找不到依赖</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /soft/bak<span class="token function">wget</span> http://nginx.org/download/nginx-1.18.0.tar.gz<span class="token function">tar</span> -zxvf nginx-1.18.0.tar.gz<span class="token builtin class-name">cd</span> /soft/bak/nginx-1.18.0./configure  --prefix<span class="token operator">=</span>/soft/nginx <span class="token punctuation">\</span>--with-http_gzip_static_module <span class="token punctuation">\</span>--with-http_stub_status_module <span class="token punctuation">\</span>--with-http_v2_module <span class="token punctuation">\</span>--with-file-aio <span class="token punctuation">\</span>--with-http_realip_module <span class="token punctuation">\</span>--with-http_ssl_module <span class="token punctuation">\</span>--with-openssl<span class="token operator">=</span>/soft/openssl <span class="token punctuation">\</span>--with-openssl-opt<span class="token operator">=</span>enable-tls1_3 <span class="token punctuation">\</span>--add-module<span class="token operator">=</span>/soft/ngx_brotli<span class="token function">make</span> -j2<span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">mv</span> /www/conf.d /soft/nginx/web</code></pre><p>vi /etc/profile</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/soft/nginx/sbin</code></pre><p>source /etc/profile</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo部署到云服务器</title>
      <link href="/2020/10/23/hexo-bu-shu-dao-yun-fu-wu-qi/"/>
      <url>/2020/10/23/hexo-bu-shu-dao-yun-fu-wu-qi/</url>
      
        <content type="html"><![CDATA[<p>解决速度过慢<br>由于GitHub服务器没有在国内，而hexo博客部署是默认在GitHub上，访问速度特别慢，一个小网页也要加载很久，这时候我便想能不能放在自己的云服务器上，查阅了很多资料后便发现这种想法是可以的。<br>首先，需要一台云服务器和一个已经备案的域名（没有备案的直接用公网IP进行访问），我的服务器是centos7的，第一步就是配置ssh公钥登陆（避免每次更新文章都要输入密码）。</p><hr><h4 id="1-安装git和nginx"><a href="#1-安装git和nginx" class="headerlink" title="1.安装git和nginx"></a>1.安装git和nginx</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt-get</span> update<span class="token function">apt-get</span> <span class="token function">install</span> git-core nginx</code></pre><hr><h4 id="2-配置nginx-用于存放生成的静态文件"><a href="#2-配置nginx-用于存放生成的静态文件" class="headerlink" title="2.配置nginx,用于存放生成的静态文件"></a>2.配置nginx,用于存放生成的静态文件</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> /www/wwwroot/blog</code></pre><hr><h4 id="3-配置Git-Hooks"><a href="#3-配置Git-Hooks" class="headerlink" title="3.配置Git Hooks"></a>3.配置Git Hooks</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> ~/blog.git <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> ~/blog.git<span class="token function">git</span> init --bare</code></pre><hr><h4 id="4-配置hooks脚本-post-recevive脚本将在blog-git仓库收到push时执行。"><a href="#4-配置hooks脚本-post-recevive脚本将在blog-git仓库收到push时执行。" class="headerlink" title="4.配置hooks脚本,post-recevive脚本将在blog.git仓库收到push时执行。"></a>4.配置hooks脚本,post-recevive脚本将在blog.git仓库收到push时执行。</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> ./hooks/post-receive</code></pre><p>脚本的原理，删除原有的 /www/wwwroot/blog目录，然后从blog.git克隆新的博客静态文件</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token function">rm</span> -rf /www/wwwroot/blog<span class="token function">git</span> clone /root/blog.git /www/wwwroot/blog</code></pre><p>给post-receive脚本执行权限</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">chmod</span> +x ./hooks/post-receive</code></pre><hr><h4 id="5-部署hexo博客"><a href="#5-部署hexo博客" class="headerlink" title="5.部署hexo博客"></a>5.部署hexo博客</h4><p>修改_config.yml</p><pre class="language-markdown" data-language="markdown"><code class="language-markdown">deploy:   type:git   repo:root@192.168.1.1:/root/blog.git   branch: master</code></pre><hr><h4 id="6-部署博客"><a href="#6-部署博客" class="headerlink" title="6.部署博客"></a>6.部署博客</h4><p>hexo成新的博客静态文件，然后通过Git将其同步到云服务器的blog.git仓库</p><pre class="language-hexo" data-language="hexo"><code class="language-hexo">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><h2 id="然后通过自己的域名即可访问。"><a href="#然后通过自己的域名即可访问。" class="headerlink" title="然后通过自己的域名即可访问。"></a>然后通过自己的域名即可访问。</h2><h4 id="7-报错"><a href="#7-报错" class="headerlink" title="7.报错"></a>7.报错</h4><p>如果不能部署报错,请执行</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-deployer-git --save</code></pre><p>再进行部署</p>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo优化-锦上添花</title>
      <link href="/2020/10/23/hexo-you-hua/"/>
      <url>/2020/10/23/hexo-you-hua/</url>
      
        <content type="html"><![CDATA[<h4 id="关键词与描述"><a href="#关键词与描述" class="headerlink" title="关键词与描述"></a>关键词与描述</h4><p>搜索引擎除了主要抓取标题外，页面的关键词和描述也会抓取。<br>在\scaffolds\post.md中添加如下代码，用于生成的文章中添加关键字和描述。</p><pre class="language-md" data-language="md"><code class="language-md">keywords: description: </code></pre><hr><h4 id="开启压缩文件-不成功，以后填坑"><a href="#开启压缩文件-不成功，以后填坑" class="headerlink" title="开启压缩文件(不成功，以后填坑)"></a>开启压缩文件(不成功，以后填坑)</h4><p>因为hexo生成的文件是静态html，里面占用了大量的空白符。使用gulp进行压缩接口提高访问速度并且降低内存。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> gulp -g<span class="token function">npm</span> <span class="token function">install</span> gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --save<span class="token function">npm</span> <span class="token function">install</span> gulp-concat<span class="token function">npm</span> <span class="token function">install</span> gulp-imagemin</code></pre><p>在hexo blog文件夹下创建gulpfile.js:</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    cssmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-minify-css'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    concat <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-concat'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//JS压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'uglify'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/js/**/.js'</span><span class="token punctuation">,</span><span class="token string">'!./public/js/**/*min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">//只是排除min.js文件还是不严谨，一般不会有问题，根据自己博客的修改我的修改为return gulp.src(['./public/**/*.js','!./public/zuoxi/**/*.js',,'!./public/radio/**/*.js'])</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对应修改为./public即可</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//public-fancybox-js压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'fancybox:js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/jquery.fancybox.js'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 合并 JS</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'jsall'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">)</span>    <span class="token comment">// 压缩后重命名</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">'app.js'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//public-fancybox-css压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'fancybox:css'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/jquery.fancybox.css'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/vendors/fancybox/source/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//CSS压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'cssmin'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/css/main.css'</span><span class="token punctuation">,</span><span class="token string">'!./public/css/*min.css'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>           <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">cssmin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/css/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//图片压缩</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/uploads/*.*'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            progressive<span class="token operator">:</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/uploads/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 public 目录 html文件 public/**/*.hmtl 表示public下所有文件夹中html，包括当前目录</span>    gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>             removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             minifyJS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             minifyCSS<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>             minifyURLs<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'build'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'uglify'</span><span class="token punctuation">,</span> <span class="token string">'cssmin'</span><span class="token punctuation">,</span> <span class="token string">'fancybox:js'</span><span class="token punctuation">,</span> <span class="token string">'fancybox:css'</span><span class="token punctuation">,</span> <span class="token string">'jsall'</span><span class="token punctuation">,</span><span class="token string">'images'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//, 'minify-html'</span></code></pre><p>在根目录下的package.json文件中生成写入scripts</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>  <span class="token string">"build"</span><span class="token builtin class-name">:</span> <span class="token string">"hexo clean &amp;&amp; hexo g &amp;&amp; gulp build"</span><span class="token punctuation">&#125;</span></code></pre><p>这样每次输入 <code>npm run build</code> 就会自动清理上次生成的文件，然后生成新的文件，最后压缩文件</p><hr><h4 id="开启推送"><a href="#开启推送" class="headerlink" title="开启推送"></a>开启推送</h4><p>将网站链接提交到百度，<a href="http://www.sousuoyinqingtijiao.com/baidu/tijiao/">百度搜索引擎提交入口</a> ,然后验证你的网站，这一点网上有很详细的教程我就不复述了，验证确认你的网站后，继续验证你的网站的robots.txt和sitemap文件是否可用，一般都是可用的。</p><p>然后就可以开始推送了，基本上推送有三种方式：主动推送&gt;自动推送&gt;sitemap三种，一般主动提交比手动提交效果好。</p><p>自动推送<br>把下面的代码放到D:\hexo\themes\next\source\js\src目录下，文件名为bai.js</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token punctuation">(</span><span class="token function-name function">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    var bp <span class="token operator">=</span> document.createElement<span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    bp.src <span class="token operator">=</span> <span class="token string">'//push.zhanzhang.baidu.com/push.js'</span><span class="token punctuation">;</span>    var s <span class="token operator">=</span> document.getElementsByTagName<span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    s.parentNode.insertBefore<span class="token punctuation">(</span>bp, s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>/script<span class="token operator">></span></code></pre><p>然后在D:\hexo\scaffolds目录下的post.md文件（模板文件中加入这么一行）<br><code>&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/bai.js&quot;&gt;&lt;/script&gt;</code><br>这样只要访问你的这个页面，就会自动向百度推送你的这个网页。</p><h4 id="手动推送"><a href="#手动推送" class="headerlink" title="手动推送"></a>手动推送</h4><p>用Python写了一个自动推送的脚本，首先你要在百度站长平台获取你的网址的token</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup <span class="token keyword">as</span> bp<span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 自动推送开启....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>site_url <span class="token operator">=</span> <span class="token string">'http://www.这里改写成你的网站.com/baidusitemap.xml'</span><span class="token keyword">try</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 获取sitemap链接....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    data_ <span class="token operator">=</span> bp<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site_url<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception<span class="token punctuation">.</span>e<span class="token punctuation">:</span>    <span class="token keyword">print</span> elist_url<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">get_</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    headers<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'curl/7.12.1 '</span><span class="token punctuation">,</span>             <span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'text/plain '</span><span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">'http://data.zz.baidu.com/urls?site=www.这里改写成你的网站.com&amp;token=这里改写成你的token'</span><span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">print</span> r<span class="token punctuation">.</span>status_code        <span class="token keyword">print</span> r<span class="token punctuation">.</span>content    <span class="token keyword">except</span> Exception<span class="token punctuation">,</span>e<span class="token punctuation">:</span>        <span class="token keyword">print</span> e<span class="token keyword">print</span> <span class="token string">'---------------------------------'</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>data_<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">'loc'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span> x<span class="token punctuation">,</span>y<span class="token punctuation">.</span>string    list_url<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">.</span>string<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'http://'</span><span class="token punctuation">,</span><span class="token string">'http://www.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token string">'---------------------------------'</span><span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 开始推送....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> list_url<span class="token punctuation">:</span>    <span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 当前推送条目为:'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token operator">+</span> x    get_<span class="token punctuation">(</span>x<span class="token punctuation">)</span></code></pre><p>修改完后双击启动一次即可，每次写完文章后，都启动推送一次。已经使用主动推送的站点，依然可以部署自动推送的JS代码，二者一起使用。</p><hr><h4 id="获取关键词"><a href="#获取关键词" class="headerlink" title="获取关键词"></a>获取关键词</h4><p>现在搜关键词全是广告，其实百度已经提供了一个接口，每次使用过百度搜索的时候下面的下拉条会出现一堆相关的关键词，这下关键词的权重是非常高的，采集这些关键词然后用在自己的文章中效果还可以，但是要记住不能堆砌关键词。</p><p>接口：<br><code>https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=</code><br>例如:<br><code>https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd=敲黑板</code><br>搜过结果：<br>window.baidu.sug({q:”langzi”,p:false,s:[“浪子彦”,”朗姿女装”,”朗姿”,”朗姿唯品会”,”浪子彦直播”,”浪子心声”,”浪子”,”浪子回头”,”朗姿股份”,”浪子燕青”]});<br>一般回显10个关键词</p><p>提取代码如下：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#coding:utf-8</span><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">print</span> <span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'Langzi.Fun 关键词采集开启....'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment">#time.sleep(0.5)</span>key <span class="token operator">=</span> <span class="token builtin">raw_input</span><span class="token punctuation">(</span><span class="token builtin">unicode</span><span class="token punctuation">(</span><span class="token string">'输入关键词:'</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>site_url <span class="token operator">=</span> <span class="token string">'https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su?wd='</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site_url<span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'window.baidu.sug(&#123;q:'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'&#125;);'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">',p:false,s:'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span></code></pre><p>网上也有很多百度下拉框工具，可以去找一下。</p><hr><h4 id="title优化"><a href="#title优化" class="headerlink" title="title优化"></a>title优化</h4><p>搜索引擎在抓取网页时，最先读取的就是网页标题，所以title是否正确设置极其重要。title一般不超过80个字符，而且词语间要用英文“-”隔开，因为计算机只对英语的敏感性较高，对汉语的敏感性不高。<br><code>用法：&lt;title&gt;网站标题&lt;/title&gt;</code></p><p>注意点：</p><p>首页title写法：首页的title写法格式一般是“总标题-特别重要的关键词或者一句话含有特别重要关键词的描述”。注意这里的“-”是英文，要问我为什么呢?这个因为互联网不是我们国内开发的，汉语不是标准，计算机只对英语敏感性较高，而对汉语敏感性不太高。<br>栏目页title写法：栏目页title的写法有两种，关键词名称命名写法是“栏目名称-总名称”，非关键词命名写法是：“栏目名称 栏目关键词-总名称”。<br>分类列表页的title写法：用关键词为这个栏目起名，然后按照下列顺序填写便可了“分类列表页名称-栏目名称-总名称”。<br>注意事项：</p><p>每个标题应该是根据当前内容设置的独特不重复的。<br>字数限制。不能太长，要不然搜索引擎结果列表会显示不全。最好不超过 25 个中文字。最好是在 10~20 之间。<br>切勿堆砌关键词。这是很多人常犯的错误<br>关键词最好出现在最前面<br>标题有吸引力。毕竟有吸引力的标题才能让用户点击<br>连词符的使用。可以使用 |-&gt;<br>不要使用没有意义的句子</p><hr><h4 id="keywords优化"><a href="#keywords优化" class="headerlink" title="keywords优化"></a>keywords优化</h4><p>主要作用是告诉搜索引擎，这个网站内容是什么。因为，好多站长在keywords堆砌关键词，所以好多搜索引擎不太重视keywords了。建议大家还是认真填写keywords，有的搜索引擎还是很重视的，由于现在词频和密度对于 SEO 影响不大，所以只要保持你的正文中出现 4~6 次关键词就可以了。千万不能堆砌关键词。</p><p>注意点：</p><p>首页keywords写法：首页keywords按照选定的栏目名称，在首页的keywords中加入总名称、栏目名称和一两个关键词。<br>栏目keywords写法：栏目的keywords其栏目下所有分类列表的名称列出，加上栏目关键字，写法是“栏目名称,栏目关键字,栏目分类列表名称”<br>分类列表页keywords写法：将你这个栏目中的主要关键字写入。</p><hr><h4 id="Description优化"><a href="#Description优化" class="headerlink" title="Description优化"></a>Description优化</h4><p>功能让搜索引擎是判断整个页面内容的，当中要写入的内容是你页面内容的简介。description一般不超过100个字符。对于个人站点而言，描述标签最好是一句通顺的句子，如果不能的话，则宁可不要。</p><p>注意点：</p><p>首页description写法：description的写法就是将首页的标题、关键词和一些特殊栏目的内容融合到里面，写成简单的介绍形式，不要只写关键词。<br>栏目description写法：将栏目的标题、关键字、分类列表名称，尽量的写入description中，仍是尽量写成介绍形式。<br>分类description写法：是将你这个栏目中的主要关键字写入。</p><hr><h4 id="H标签优化"><a href="#H标签优化" class="headerlink" title="H标签优化"></a>H标签优化</h4><p>H 标签的重要性可能是仅次与页面标签。H1-&gt;H6 的重要性依次降低。</p><p>所以建议在页面的 H1 和 H2 标签中混入关键词</p><hr><h4 id="图片-ALT-文字优化"><a href="#图片-ALT-文字优化" class="headerlink" title="图片 ALT 文字优化"></a>图片 ALT 文字优化</h4><p>插入图片的时候会提示输入文字，这个不能敷衍。图片 ALT 文字出现的关键词对页面相关性也有一定的影响。同样的，也不要在 ALT 上堆砌关键词。</p><hr><h4 id="内部链接及锚文字优化"><a href="#内部链接及锚文字优化" class="headerlink" title="内部链接及锚文字优化"></a>内部链接及锚文字优化</h4><p>内部链接对于爬行和收录具有很重要的意义。内部链接对页面关键词相关性也有影响，最主要的就是在内部链接中使用锚文字。</p><p>锚文字是告诉搜索引擎被链接页面主题内容的最重要依据之一。我们有时候可能无法控制外部链接的锚文字，但是对于站内的内部链接锚文字我们可以控制。不过有几点需要注意：</p><p>适当出现匹配关键词的锚文字<br>锚文字不能集中导航或者页尾，要分散在正文中<br>不要过度优化锚文字，要不然有可能会被搜索引擎惩罚</p><hr><h4 id="搜索引擎食用方法"><a href="#搜索引擎食用方法" class="headerlink" title="搜索引擎食用方法"></a>搜索引擎食用方法</h4><p>首先给你的文章生成sitemap文件</p><ul><li>谷歌<br>npm install hexo-generator-sitemap –save #sitemap.xml适合提交给谷歌搜素引擎</li><li>百度<br>npm install hexo-generator-baidu-sitemap –save #baidusitemap.xml适合提交百度搜索引擎<br>然后在站点配置文件_config.yml中添加以下代码<pre class="language-yml" data-language="yml"><code class="language-yml">自动生成sitemapsitemap:  path: sitemap.xmlbaidusitemap:  path: baidusitemap.xml</code></pre>最后修改站点配置文件_config.yml<pre class="language-yml" data-language="yml"><code class="language-yml"># URL## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;url: http:&#x2F;&#x2F;你的网站</code></pre>每次hexo g后都会在/public目录下生成sitemap.xml和baidusitemap.xml，这就是你的站点地图。</li></ul><hr><h4 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt:"></a>robots.txt:</h4><p>robots.txt 是一种存放于网站根目录下的 ASCII 编码的文本文件，它的作用是告诉搜索引擎此网站中哪些内容是可以被爬取的，哪些是禁止爬取的。robots.txt 放在博客目录下的 source 文件夹中，博客生成后在站点目录 /public/ 下。<br>我的 robots.txt 文件内容如下：</p><pre class="language-txt" data-language="txt"><code class="language-txt">User-agent: *Allow: &#x2F;Allow: &#x2F;archives&#x2F;Allow: &#x2F;categories&#x2F;Allow: &#x2F;about&#x2F;Disallow: &#x2F;js&#x2F;Disallow: &#x2F;css&#x2F;Disallow: &#x2F;fonts&#x2F;Disallow: &#x2F;vendors&#x2F;</code></pre><p>robots.txt 文件更新至网站后可进入 Google Search Console - 抓取 - robots.txt 测试工具进行测试。</p><hr><h4 id="其他SEO优化"><a href="#其他SEO优化" class="headerlink" title="其他SEO优化"></a>其他SEO优化</h4><p>SEO优化应该说是一个收益延迟的行为，可能你做的优化短期内看不到什么效果，但是一定要坚持，seo优化也是有很深的可以研究的东西，从我们最初的网站设计，和最基础的标签的选择都有很大的关系，网站设计就如我们刚刚说的，要让用户点击三次可以到达网站的任何一个页面，要增加高质量的外链，增加相关推荐（比如说我们经常见到右侧本站的最高阅读的排名列表），然后就是给每一个页面加上keyword和描述</p><p>在代码中，我们应该写出能让浏览器识别的语义化HTML，这样有助于爬虫抓取更多的有效信息：爬虫依赖于标签来确定上下文和各个关键字的权重；并且对外链设置nofollow标签，避免spider爬着爬着就爬出去了（减少网站的跳出率），并且我们要尽量在一些比较大的网站增加我们站点的曝光率，因为spider会经常访问大站，比如我们在掘金等技术社区发表文章中带有我们的站点，这样spider是很有可能爬到我们中的站点的，所以说,重要的还是:</p><p>网站外链的推广度、数量和质量<br>网站的内链足够强大<br>网站的原创质量<br>网站的年龄时间<br>网站的更新频率（更新次数越多越好）<br>网站的服务器<br>网站的流量：流量越高网站的权重越高<br>网站的关键词排名：关键词排名越靠前，网站的权重越高<br>网站的收录数量：网站百度收录数量越多，网站百度权重越高<br>网站的浏览量及深度：用户体验越好，网站的百度权重越高</p><hr><h4 id="每篇文字独立生成文件夹"><a href="#每篇文字独立生成文件夹" class="headerlink" title="每篇文字独立生成文件夹"></a>每篇文字独立生成文件夹</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install https:&#x2F;&#x2F;github.com&#x2F;CodeFalling&#x2F;hexo-asset-image --save</code></pre><hr><h4 id="优化hexo的url"><a href="#优化hexo的url" class="headerlink" title="优化hexo的url"></a>优化hexo的url</h4><p>SEO搜索引擎优化认为，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，于是，我们需要优化一下网站文章url<br>方案一：<br>我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下：</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML">url: https:&#x2F;&#x2F;www.zdyn.cnroot: &#x2F;permalink: :title.htmlpermalink_defaults:</code></pre><p>方案二：<br>使用插件优化url<br>插件hexo-abbrlink实现了这个功能，它将原来的URL地址重新进行了进制转换和再编码。<br>安装hexo-abbrlink:</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-abbrlink --save</code></pre><p>配置博客根目录下的_config.yml文件:</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML"># permalink: :title&#x2F;permalink: archives&#x2F;:abbrlink.htmlabbrlink:  alg: crc32  # 算法：crc16(default) and crc32  rep: hex    # 进制：dec(default) and hex</code></pre>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo推荐插件</title>
      <link href="/2020/10/23/hexo-tui-jian-cha-jian/"/>
      <url>/2020/10/23/hexo-tui-jian-cha-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="安装搜索插件"><a href="#安装搜索插件" class="headerlink" title="安装搜索插件"></a>安装搜索插件</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-generator-search --save</code></pre><p>hexo配置文件添加:</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><p>主题配置文件添加：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml">local_search：  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><hr><h4 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h4><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于SEO，且 gitment 评论对中文链接也不支持。我们可以用 hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。<br>安装命令如下：</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment"># default: '-'</span></code></pre><blockquote><p>注：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a>插件也可以生成非中文的链接。</p></blockquote><hr><h4 id="添加emoji表情支持"><a href="#添加emoji表情支持" class="headerlink" title="添加emoji表情支持"></a>添加emoji表情支持</h4><p>本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：:smile:）转变成会跳跃的emoji表情，安装命令如下：</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML">githubEmojis:  enable: true  className: github-emoji  inject: true  styles:  customEmojis:</code></pre><hr><h4 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h4><p>(暂未使用过这个插件,但是还是写上,万一用上了呢)<br>本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下：</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML">feed:  type: atom  path: atom.xml  limit: 20  hub:  content:  content_limit: 140  content_limit_delim: &#39; &#39;  order_by: -date</code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。</p><hr><h4 id="生成网站地图"><a href="#生成网站地图" class="headerlink" title="生成网站地图"></a>生成网站地图</h4><p>我们需要使用npm自动生成网站的sitemap，然后将生成的sitemap提交到百度和其他搜索引擎<br>安装sitemap插件如下:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-sitemap --save     <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-baidu-sitemap --save</code></pre><p>在根目录配置文件.yml中修改url为你的站点地址</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML"># URL# If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;# url: https:&#x2F;&#x2F;www.zdyn.cn&#x2F;url: https:&#x2F;&#x2F;www.zdynb.cnroot: &#x2F;permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;permalink_defaults:</code></pre><p>执行完hexo g命令之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件，可以通过：<a href="https://www.zdynb.cn/baidusitemap.xml">https://www.zdynb.cn/baidusitemap.xml</a>, 查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。</p><hr><h4 id="hexo-filter-nofollow-Hexo-官方的-nofollow-插件"><a href="#hexo-filter-nofollow-Hexo-官方的-nofollow-插件" class="headerlink" title="hexo-filter-nofollow - Hexo 官方的 nofollow 插件"></a>hexo-filter-nofollow - Hexo 官方的 nofollow 插件</h4><p>hexo-filter-nofollow 是一个自动为 Hexo 博客中的外链添加 rel=”external nofollow noreferrer” 的插件。<br>使用npm安装</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i hexo-filter-nofollow --save</code></pre><p>如果你使用 yarn 作为你的 Hexo 的包管理器，你也可以使用下述命令：<br>使用yarn安装，yarn安装教程</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> hexo-filter-nofollow</code></pre><p>然后在根目录的_config.yml添加以下选项</p><pre class="language-YAML" data-language="YAML"><code class="language-YAML">nofollow:  enable: true #是否启用插件，默认值为 true  field: site #插件的处理范围，默认值为 site，可选 post 或 site  exclude: #域名白名单    - &#39;exclude1.com&#39;    - &#39;exclude2.com&#39;</code></pre><blockquote><p>enable - 是否启用插件，默认值为 true<br>field - 插件的处理范围，默认值为 site，可选 post 或 site<br>post - 仅处理文章内容<br>site - 处理全站所有页面<br>exclude - 域名白名单，不同的子域名视为不同的域名（如 www）<br>exclude1.com不包括 <a href="http://www.exclude1.com/">www.exclude1.com</a> 或 en.exclude1.com</p></blockquote><hr><h4 id="添加字数统计和阅读时间"><a href="#添加字数统计和阅读时间" class="headerlink" title="添加字数统计和阅读时间"></a>添加字数统计和阅读时间</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm i --save hexo-wordcountnpm add hexo-symbols-count-time</code></pre><hr><h4 id="使用neat插件压缩来提升访问速度"><a href="#使用neat插件压缩来提升访问速度" class="headerlink" title="使用neat插件压缩来提升访问速度"></a>使用neat插件压缩来提升访问速度</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-neat --save</code></pre><hr><h4 id="使用lazyload插件进行优化"><a href="#使用lazyload插件进行优化" class="headerlink" title="使用lazyload插件进行优化"></a>使用lazyload插件进行优化</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install hexo-lazyload-image --save</code></pre>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo疑难杂症</title>
      <link href="/2020/10/22/hexo-yi-nan-za-zheng/"/>
      <url>/2020/10/22/hexo-yi-nan-za-zheng/</url>
      
        <content type="html"><![CDATA[<h4 id="permalink-title-html方式插入图片路径错误"><a href="#permalink-title-html方式插入图片路径错误" class="headerlink" title="permalink: :title.html方式插入图片路径错误"></a>permalink: :title.html方式插入图片路径错误</h4><p>该方式会自动在根目录添加同名+.htm文件夹<br>最终导致无法找到插入的图片<br>解决办法就是不用这种域名解析方式<br><a href="https://github.com/rozbo/hexo-abbrlink/issues/19">作者issue已记录该问题</a></p><hr><h4 id="标签页面不显示标签列表"><a href="#标签页面不显示标签列表" class="headerlink" title="标签页面不显示标签列表"></a>标签页面不显示标签列表</h4><h5 id="step-one"><a href="#step-one" class="headerlink" title="step one:"></a>step one:</h5><p>scaffolds/draft.md</p><blockquote><p>title: &#123;&#123; title &#125;&#125;<br>tags: &#123;&#123; tags &#125;&#125;<br>scaffolds/post.md<br>title: &#123;&#123; title &#125;&#125;<br>date: &#123;&#123; date &#125;&#125;<br>tags: &#123;&#123; tags &#125;&#125;<br>tags/index<br>title: Tagcloud<br>date: 2017-04-26 17:47:43<br>type: “tags”<br>layout: “tags”</p></blockquote><h5 id="step-two"><a href="#step-two" class="headerlink" title="step two:"></a>step two:</h5><p>生成标签页面</p><blockquote><p>hexo new page “tags”<br>编辑分类页面 \source\tags\index.md<br>title: tags<br>date: 2020-10-22 18:59:59<br>type: “tags”<br>layout: “tags”<br>生成分类页面<br>hexo new page “categories”<br>编辑分类页面 \source\categories\index.md<br>title: categories<br>date: 2020-10-22 19:00:59<br>type: “categories”<br>layout: “categories”</p></blockquote><hr><h4 id="github-pages-绑定域名-显示-404-无法访问"><a href="#github-pages-绑定域名-显示-404-无法访问" class="headerlink" title="github pages 绑定域名 显示 404 无法访问"></a>github pages 绑定域名 显示 404 无法访问</h4><p>在本地source文件夹里新建CNAME文件，写上你的域名即可<br>使用master分支<br>每次更新代码后域名需要重新绑定<br>_config.yml中设定正确的域名</p><p>项目属性改为公开 public<br>打开项目 &gt;&gt; settings &gt;&gt; 在页面最下找到 Change repository visibility &gt;&gt; Change visibility &gt;&gt; Make public</p><p><img src="https://docs.github.com/assets/images/help/repository/repo-change-vis.png"></p><hr><h4 id="代码块显示行号"><a href="#代码块显示行号" class="headerlink" title="代码块显示行号"></a>代码块显示行号</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></code></pre><hr><h4 id="突-丑-出-不-打-要-赏-脸"><a href="#突-丑-出-不-打-要-赏-脸" class="headerlink" title="突(丑)出(不)打(要)赏(脸)"></a>突(丑)出(不)打(要)赏(脸)</h4><ul><li><p>修改hexo/themes/hexo-theme-matery/layout/_partial/reward.ejs中“赏”字及DIV样式<br><code>style=&quot;font-size:50px;width:100px;height:100px;line-height:100px;&quot;</code></p></li><li><p>修改hexo/themes/hexo-theme-matery/layout/_partial/post-detail.ejs中在版权信息上面添加打赏模块</p></li><li><p>打赏模块 hexo/themes/hexo-theme-matery/layout/_partial/wx2zfb.ejs</p></li></ul><pre class="language-css" data-language="css"><code class="language-css">&lt;div class=<span class="token string">"reprint"</span> id=<span class="token string">"reprint-statement"</span> style=<span class="token string">"padding:20px;text-align:center;"</span>>&lt;img src=<span class="token string">"&lt;%- theme.jsDelivr.url %>&lt;%- url_for(theme.reward.thanks) %>"</span>>&lt;/img>&lt;/div></code></pre>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo搭建及必备插件</title>
      <link href="/2020/10/22/hexo-da-jian/"/>
      <url>/2020/10/22/hexo-da-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h4><p>访问 <a href="https://nodejs.org/en/download/">nodejs官网</a> 下载并安装nodejs</p><blockquote><p>cd /soft/bak<br>wget <a href="https://nodejs.org/dist/v12.19.0/node-v12.19.0-linux-x64.tar.xz">https://nodejs.org/dist/v12.19.0/node-v12.19.0-linux-x64.tar.xz</a><br>tar xvf node-v12.19.0-linux-x64.tar.xz</p></blockquote><hr><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><pre class="language-sh" data-language="sh"><code class="language-sh">vi &#x2F;etc&#x2F;profilePATH&#x3D;$PATH:&#x2F;soft&#x2F;nodejs&#x2F;binsource &#x2F;etc&#x2F;profilenode -vnpm -v</code></pre><hr><h4 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.orgcnpm -v</code></pre><hr><h4 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h4><pre class="language-npm" data-language="npm"><code class="language-npm">npm install gulp -gnpm install gulp gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --savenpm install gulp-debug gulp-clean-css gulp-changed gulp-if gulp-plumber gulp-babel babel-preset-es2015 del @babel&#x2F;core --savenpm install hexo-neat --save</code></pre><hr><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><blockquote><p>cd /www/hexo<br>cnpm install -g hexo-cli<br>hexo -v<br>hexo init</p></blockquote><hr><h4 id="安装git支持"><a href="#安装git支持" class="headerlink" title="安装git支持"></a>安装git支持</h4><pre class="language-npm" data-language="npm"><code class="language-npm">cnpm install --save fill-range@^7.0cnpm install --save hexo-deployer-git</code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span>  https<span class="token punctuation">:</span>//github.com/powerglq/powerglq.github.io  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master  <span class="token key atrule">message</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>message<span class="token punctuation">]</span></code></pre><hr><h4 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h4><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span></code></pre><hr><h4 id="安装matery主题"><a href="#安装matery主题" class="headerlink" title="安装matery主题"></a>安装matery主题</h4><pre class="language-sh" data-language="sh"><code class="language-sh">git clone https:&#x2F;&#x2F;github.com&#x2F;blinkfox&#x2F;hexo-theme-matery.git hexo-theme-matery</code></pre><p><a href="https://lyes.xyz/2020/04/01/Centos7%E6%90%AD%E5%BB%BAHexo/">在主题配置文件中设置</a></p><hr><h4 id="配置github"><a href="#配置github" class="headerlink" title="配置github"></a>配置github</h4><p><code>vi _config.yml</code></p><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token key atrule">type</span><span class="token punctuation">:</span> git<span class="token key atrule">repo</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/powerglq/powerglq.github.io.git<span class="token key atrule">branch</span><span class="token punctuation">:</span> master</code></pre><hr><h4 id="发布github"><a href="#发布github" class="headerlink" title="发布github"></a>发布github</h4><pre class="language-sh" data-language="sh"><code class="language-sh">hexo cleanhexo ghexo d</code></pre><hr><h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><blockquote><p>hexo s<br><a href="http://localhost:4000/">localhost:4000 预览</a></p></blockquote><hr><h4 id="收藏的主题"><a href="#收藏的主题" class="headerlink" title="收藏的主题"></a>收藏的主题</h4><p>git clone <a href="https://gitee.com/songofseven/hexo-theme-next.git">https://gitee.com/songofseven/hexo-theme-next.git</a> themes/next<br>git clone git://github.com/shenliyang/hexo-theme-snippet.git themes/hexo-theme-snippet</p><pre class="language-npm" data-language="npm"><code class="language-npm">npm install eslint@^4.12npm install ajv@^6.9</code></pre><p>TypeError: Cannot read property ‘enable’ of undefined 删除modouls</p><hr><h4 id="文章头设置"><a href="#文章头设置" class="headerlink" title="文章头设置"></a>文章头设置</h4><p>首先为了新建文章方便，建议将/scaffolds/post.md修改为如下代码：</p><pre class="language-md" data-language="md"><code class="language-md">title: &#123;&#123; title &#125;&#125;date: &#123;&#123; date &#125;&#125;top: falsecover: falsepassword:toc: truemathjax: truesummary:tags:categories:</code></pre><p>这样新建文章后不用你自己补充了，修改信息就行</p><hr><h4 id="添加404页面"><a href="#添加404页面" class="headerlink" title="添加404页面"></a>添加404页面</h4><p>在主题配置文件\themes\matery_config.yml中的menu设置添加一个</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">404</span><span class="token punctuation">:</span><span class="token key atrule">url</span><span class="token punctuation">:</span> /404<span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>heartbeat</code></pre><p>原来的主题没有404页面，加一个也不是什么难事。首先在/source/404目录下新建一个<code>index.md</code>，内容如下：</p><pre class="language-md" data-language="md"><code class="language-md">title: 404date: 2020-07-19 16:41:10type: "404"layout: "404"description: "你来到了没有知识的荒原 :("</code></pre><p>然后在/themes/matery/layout/目录下新建一个404.ejs文件，内容如下：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>style type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token operator">></span> <span class="token comment">/* don't remove. */</span> <span class="token punctuation">.</span>about<span class="token operator">-</span>cover <span class="token punctuation">&#123;</span> height<span class="token operator">:</span> <span class="token number">75</span>vh<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bg-cover pd-header about-cover"</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"container"</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"row"</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"col s10 offset-s1 m8 offset-m2 l8 offset-l2"</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"brand"</span><span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"title center-align"</span><span class="token operator">></span> <span class="token number">404</span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"description center-align"</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">%=</span> page<span class="token punctuation">.</span>description <span class="token operator">%</span><span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span> <span class="token operator">&lt;</span>script<span class="token operator">></span>   <span class="token comment">// 每天切换 banner 图. Switch banner image every day. $('.bg-cover').css('background-image', 'url(/medias/banner/' + new Date().getDay() + '.jpg)'); </span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><hr><h4 id="添加动漫人物"><a href="#添加动漫人物" class="headerlink" title="添加动漫人物"></a>添加动漫人物</h4><p>其实三步就行了，不用像网上有些教程那么复杂。</p><ul><li><p>第一步：<br><code>npm install --save hexo-helper-live2d</code></p></li><li><p>第二步：<br><code>npm install live2d-widget-model-shizuku</code></p></li><li><p>第三步：<br>在根目录配置文件中添加如下代码：</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">log</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>shizuku  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">300</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">react</span><span class="token punctuation">:</span>    <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span></code></pre><p>然后hexo g再hexo s就能预览出效果了，但是有个注意的地方，我发现这个动漫人物最好不要和不蒜子同时使用，不然不蒜子会显示不出来。</p></li></ul><hr><h4 id="图片添加水印"><a href="#图片添加水印" class="headerlink" title="图片添加水印"></a>图片添加水印</h4><p>为了防止别人抄袭你文章，可以把所有的图片都加上水印，方法很简单。<br>首先在博客根目录下新建一个watermark.py，代码如下：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> glob<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageDraw<span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageFont<span class="token keyword">def</span> <span class="token function">watermark</span><span class="token punctuation">(</span>post_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> post_name <span class="token operator">==</span> <span class="token string">'all'</span><span class="token punctuation">:</span>        post_name <span class="token operator">=</span> <span class="token string">'*'</span>    dir_name <span class="token operator">=</span> <span class="token string">'source/_posts/'</span> <span class="token operator">+</span> post_name <span class="token operator">+</span> <span class="token string">'/*'</span>    <span class="token keyword">for</span> files <span class="token keyword">in</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        im <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>im<span class="token punctuation">.</span>getbands<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>            im <span class="token operator">=</span> im<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>        font <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">'STSONG.TTF'</span><span class="token punctuation">,</span> <span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>im<span class="token punctuation">)</span>        draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span>im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  <span class="token string">u'@yourname'</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token operator">=</span>font<span class="token punctuation">)</span>        im<span class="token punctuation">.</span>save<span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        watermark<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[usage] &lt;input>'</span><span class="token punctuation">)</span></code></pre><p>字体也放根目录下，自己找字体。然后每次写完一篇文章可以运行python3 watermark.py postname添加水印，如果第一次运行要给所有文章添加水印，可以运行python3 watermark.py all。</p><hr><h4 id="添加百度统计和谷歌统计代码"><a href="#添加百度统计和谷歌统计代码" class="headerlink" title="添加百度统计和谷歌统计代码"></a>添加百度统计和谷歌统计代码</h4><p>首先打开<a href="https://ziyuan.baidu.com/site/index">百度站长平台</a>，然后点击添加网站，输入网址并选择领域。<br>接下来要验证网站所有权，有三种方式，推荐采用HTML标签验证，最简单，将代码复制出来。<br>打开themes/matery/layout/_partial/head.ejs，修改下面两行：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>baidu-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>google-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>其中content内容改成你自己刚刚复制出来的就行了。</p><hr><h4 id="添加雪花特效"><a href="#添加雪花特效" class="headerlink" title="添加雪花特效"></a>添加雪花特效</h4><p>首先在<code>themes/matery/source/libs/others</code>下新建文件<code>snow.js</code>，并插入如下代码：</p><pre class="language-js" data-language="js"><code class="language-js"><span class="token comment">/*样式一*/</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">snow</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">var</span> $flake <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;div id="snowbox" />'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'position'</span><span class="token operator">:</span> <span class="token string">'absolute'</span><span class="token punctuation">,</span><span class="token string">'z-index'</span><span class="token operator">:</span><span class="token string">'9999'</span><span class="token punctuation">,</span> <span class="token string">'top'</span><span class="token operator">:</span> <span class="token string">'-50px'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">'&amp;#10052;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> documentHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> documentWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaults <span class="token operator">=</span> <span class="token punctuation">&#123;</span> minSize <span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> maxSize <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span> newOn <span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> flakeColor <span class="token operator">:</span> <span class="token string">"#AFDAEF"</span> <span class="token comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> options <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> defaults<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">var</span> interval<span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">var</span> startPositionLeft <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> documentWidth <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span> startOpacity <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sizeFlake <span class="token operator">=</span> options<span class="token punctuation">.</span>minSize <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>maxSize<span class="token punctuation">,</span> endPositionTop <span class="token operator">=</span> documentHeight <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span> endPositionLeft <span class="token operator">=</span> startPositionLeft <span class="token operator">-</span> <span class="token number">500</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">500</span><span class="token punctuation">,</span> durationFall <span class="token operator">=</span> documentHeight <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5000</span><span class="token punctuation">;</span> $flake<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> left<span class="token operator">:</span> startPositionLeft<span class="token punctuation">,</span> opacity<span class="token operator">:</span> startOpacity<span class="token punctuation">,</span> <span class="token string">'font-size'</span><span class="token operator">:</span> sizeFlake<span class="token punctuation">,</span> color<span class="token operator">:</span> options<span class="token punctuation">.</span>flakeColor <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> top<span class="token operator">:</span> endPositionTop<span class="token punctuation">,</span> left<span class="token operator">:</span> endPositionLeft<span class="token punctuation">,</span> opacity<span class="token operator">:</span> <span class="token number">0.2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>durationFall<span class="token punctuation">,</span><span class="token string">'linear'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>newOn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">snow</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> minSize<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">/* 定义雪花最小尺寸 */</span> maxSize<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span><span class="token comment">/* 定义雪花最大尺寸 */</span> newOn<span class="token operator">:</span> <span class="token number">300</span> <span class="token comment">/* 定义密集程度，数字越小越密集 */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*样式二*/</span> <span class="token comment">/* 控制下雪 */</span> <span class="token keyword">function</span> <span class="token function">snowFall</span><span class="token punctuation">(</span><span class="token parameter">snow</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* 可配置属性 */</span> snow <span class="token operator">=</span> snow <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxFlake <span class="token operator">=</span> snow<span class="token punctuation">.</span>maxFlake <span class="token operator">||</span> <span class="token number">200</span><span class="token punctuation">;</span> <span class="token comment">/* 最多片数 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flakeSize <span class="token operator">=</span> snow<span class="token punctuation">.</span>flakeSize <span class="token operator">||</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">/* 雪花形状 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed <span class="token operator">=</span> snow<span class="token punctuation">.</span>fallSpeed <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">/* 坠落速度 */</span> <span class="token punctuation">&#125;</span> <span class="token comment">/* 兼容写法 */</span> requestAnimationFrame <span class="token operator">=</span> window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>msRequestAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>oRequestAnimationFrame <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> cancelAnimationFrame <span class="token operator">=</span> window<span class="token punctuation">.</span>cancelAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>mozCancelAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitCancelAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>msCancelAnimationFrame <span class="token operator">||</span> window<span class="token punctuation">.</span>oCancelAnimationFrame<span class="token punctuation">;</span> <span class="token comment">/* 开始下雪 */</span> snowFall<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">/* 创建画布 */</span> <span class="token function">snowCanvas</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 创建雪花形状 */</span> <span class="token function">createFlakes</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 画雪 */</span> <span class="token function">drawSnow</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token comment">/* 创建画布 */</span> <span class="token keyword">function</span> <span class="token function">snowCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* 添加Dom结点 */</span> <span class="token keyword">var</span> snowcanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> snowcanvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"snowfall"</span><span class="token punctuation">;</span> snowcanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span> snowcanvas<span class="token punctuation">.</span>height <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span> snowcanvas<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">,</span> <span class="token string">"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>snowcanvas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> snowcanvas<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ctx <span class="token operator">=</span> snowcanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 窗口大小改变的处理 */</span> window<span class="token punctuation">.</span><span class="token function-variable function">onresize</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> snowcanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span> <span class="token comment">/* snowcanvas.height = window.innerHeight */</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token comment">/* 雪运动对象 */</span> <span class="token keyword">function</span> <span class="token function">flakeMove</span><span class="token punctuation">(</span><span class="token parameter">canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">,</span> flakeSize<span class="token punctuation">,</span> fallSpeed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> canvasWidth<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* x坐标 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* y坐标 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> flakeSize <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">/* 形状 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxSize <span class="token operator">=</span> flakeSize<span class="token punctuation">;</span> <span class="token comment">/* 最大形状 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> fallSpeed<span class="token punctuation">;</span> <span class="token comment">/* 坠落速度 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed <span class="token operator">=</span> fallSpeed<span class="token punctuation">;</span> <span class="token comment">/* 坠落速度 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span> <span class="token comment">/* Y方向速度 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">/* X方向速度 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stepSize <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">/* 步长 */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>step <span class="token operator">=</span> <span class="token number">0</span> <span class="token comment">/* 步数 */</span> <span class="token punctuation">&#125;</span> flakeMove<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span> <span class="token comment">/* 左右摆动(余弦) */</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">*=</span> <span class="token number">0.98</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token punctuation">&#125;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>step <span class="token operator">+=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stepSize<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velY<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX<span class="token punctuation">;</span> <span class="token comment">/* 飞出边界的处理 */</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">>=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">>=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">/* 飞出边界-放置最顶端继续坠落 */</span> flakeMove<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxSize <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！） flakeMove.prototype.render = function(ctx) &#123; var snowFlake = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.size); snowFlake.addColorStop(0, "rgba(255, 255, 255, 0.9)"); /* 此处是雪花颜色，默认是白色 */ snowFlake.addColorStop(.5, "rgba(255, 255, 255, 0.5)"); /* 若要改为其他颜色，请自行查 */ snowFlake.addColorStop(1, "rgba(255, 255, 255, 0)"); /* 找16进制的RGB 颜色代码。 */ ctx.save(); ctx.fillStyle = snowFlake; ctx.beginPath(); ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2); ctx.fill(); ctx.restore(); &#125;; /* 创建雪花-定义形状 */ function createFlakes() &#123; var maxFlake = this.maxFlake, flakes = this.flakes = [], canvas = this.canvas; for (var i = 0; i &lt; maxFlake; i++) &#123; flakes.push(new flakeMove(canvas.width, canvas.height, this.flakeSize, this.fallSpeed)) &#125; &#125; /* 画雪 */ function drawSnow() &#123; var maxFlake = this.maxFlake, flakes = this.flakes; ctx = this.ctx, canvas = this.canvas, that = this; /* 清空雪花 */ ctx.clearRect(0, 0, canvas.width, canvas.height); for (var e = 0; e &lt; maxFlake; e++) &#123; flakes[e].update(); flakes[e].render(ctx); &#125; /* 一帧一帧的画 */ this.loop = requestAnimationFrame(function() &#123; drawSnow.apply(that); &#125;); &#125; /* 调用及控制方法 */ var snow = new snowFall(&#123;maxFlake:60&#125;); snow.start();</span></code></pre><p>然后在主题配置文件里<code>libs.js</code>里添加一行<code>snow: /libs/others/snow.js</code><br>在<code>themes/matery/layout/layout.ejs</code>里添加如下代码：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 雪花特效 --></span> &lt;% if (theme.snow.enable) &#123; %> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&lt;%- theme.libs.js.snow %><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> &lt;% &#125; %></code></pre><p>最后在主题配置文件最后添加：</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token comment"># 雪花特效</span><span class="token key atrule">snow</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code></pre><p>这个特效和动漫一样，有点花里胡哨，并且可能会造成卡顿，所以我并没有开启，还是给大家一个最干净的阅读体验吧。</p><hr><h4 id="动态标签栏"><a href="#动态标签栏" class="headerlink" title="动态标签栏"></a>动态标签栏</h4><p>在<code>theme/matery/layout/layout.ejs</code>下添加如下代码：</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"> <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span> st<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"Σ(っ °Д °;)っ喔哟，崩溃啦！"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"φ(゜▽゜*)♪咦，又好了！"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><hr><h4 id="顶部导航半透明"><a href="#顶部导航半透明" class="headerlink" title="顶部导航半透明"></a>顶部导航半透明</h4><p>在<code>themes\hexo-theme-matery\source\css\matery.css</code>的第250行左右：</p><pre class="language-css" data-language="css"><code class="language-css"><span class="token selector">.bg-color</span> <span class="token punctuation">&#123;</span><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #FF7F00 0%<span class="token punctuation">,</span> #8B00FF 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>这是导航栏颜色以及透明效果，随你喜好来改。除此之外，本主题大部分的css都可以在matery.css里面进行个性化修改，我就不一一赘述了。当然，前提是你得具备css基础知识以及浏览器开发者工具的基本使用。</p><hr><h4 id="添加-RSS-订阅支持"><a href="#添加-RSS-订阅支持" class="headerlink" title="添加 RSS 订阅支持"></a>添加 RSS 订阅支持</h4><p><code>npm install hexo-generator-feed --save</code><br>在 Hexo 根目录下的 _config.yml 文件中，新增以下设置：</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了</p><hr><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加children关键字(如:About菜单下添加children)<br>2.在children下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 -.<br>4.注意缩进格式<br>图标icon 可以在<a href="https://link.zhihu.com/?target=https://fontawesome.com/icons">Font Awesome</a> 中查找</p><pre class="language-yml" data-language="yml"><code class="language-yml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><hr><h4 id="新建友情链接-friends-页"><a href="#新建友情链接-friends-页" class="headerlink" title="新建友情链接 friends 页"></a>新建友情链接 friends 页</h4><p>friends 页是用来展示友情链接信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page &quot;friends&quot;</code><br>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class="language-md" data-language="md"><code class="language-md"><span class="token hr punctuation">---</span>title: friendsdate: 2018-12-12 21:25:30type: "friends"<span class="token title important">layout: "friends"<span class="token punctuation">---</span></span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><p>[{<br>    “avatar”: “<a href="http://image.luokangyuan.com/1_qq_27922023.jpg&quot;">http://image.luokangyuan.com/1_qq_27922023.jpg&quot;</a>,<br>    “name”: “码酱”,<br>    “introduction”: “我不是大佬，只是在追寻大佬的脚步”,<br>    “url”: “<a href="http://luokangyuan.com/&quot;">http://luokangyuan.com/&quot;</a>,<br>    “title”: “前去学习”<br>}, {<br>    “avatar”: “<a href="http://image.luokangyuan.com/4027734.jpeg&quot;">http://image.luokangyuan.com/4027734.jpeg&quot;</a>,<br>    “name”: “闪烁之狐”,<br>    “introduction”: “编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬”,<br>    “url”: “<a href="https://blinkfox.github.io/&quot;">https://blinkfox.github.io/&quot;</a>,<br>    “title”: “前去学习”<br>}, {<br>    “avatar”: “<a href="http://image.luokangyuan.com/avatar.jpg&quot;">http://image.luokangyuan.com/avatar.jpg&quot;</a>,<br>    “name”: “ja_rome”,<br>    “introduction”: “平凡的脚步也可以走出伟大的行程”,<br>    “url”: “<a href="https://me.csdn.net/jlh912008548&quot;">https://me.csdn.net/jlh912008548&quot;</a>,<br>    “title”: “前去学习”<br>}]</p><hr><h4 id="新建留言板-contact-页"><a href="#新建留言板-contact-页" class="headerlink" title="新建留言板 contact 页"></a>新建留言板 contact 页</h4><p>contact 页是用来展示留言板信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page &quot;contact&quot;</code><br>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class="language-md" data-language="md"><code class="language-md"><span class="token hr punctuation">---</span>title: contactdate: 2018-09-30 17:25:30type: "contact"<span class="token title important">layout: "contact"<span class="token punctuation">---</span></span></code></pre><p>注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。</p><hr><h4 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h4><p><code>about</code> 页是用来展示关于我和我的博客信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：<br><code>hexo new page &quot;about&quot;</code><br>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class="language-md" data-language="md"><code class="language-md"><span class="token hr punctuation">---</span>title: aboutdate: 2018-09-30 17:25:30type: "about"<span class="token title important">layout: "about"<span class="token punctuation">---</span></span></code></pre><hr><h4 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h4><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page &quot;categories&quot;</code><br>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class="language-md" data-language="md"><code class="language-md"><span class="token hr punctuation">---</span>title: categoriesdate: 2018-09-30 17:25:30type: "categories"<span class="token title important">layout: "categories"<span class="token punctuation">---</span></span></code></pre><hr><h4 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h4><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><p><code>hexo new page &quot;tags&quot;</code><br>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class="language-md" data-language="md"><code class="language-md"><span class="token hr punctuation">---</span>title: tagsdate: 2018-09-30 18:23:38type: "tags"<span class="token title important">layout: "tags"<span class="token punctuation">---</span></span></code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置文件</title>
      <link href="/2020/09/13/nginx-pei-zhi-wen-jian/"/>
      <url>/2020/09/13/nginx-pei-zhi-wen-jian/</url>
      
        <content type="html"><![CDATA[<h4 id="nginx基础配置"><a href="#nginx基础配置" class="headerlink" title="nginx基础配置"></a>nginx基础配置</h4><p>nginx.conf</p><pre class="language-conf" data-language="conf"><code class="language-conf">#user  nobody;worker_processes  1;#error_log  logs&#x2F;error.log;#error_log  logs&#x2F;error.log  notice;#error_log  logs&#x2F;error.log  info;#pid        logs&#x2F;nginx.pid;events &#123;    worker_connections  1024;&#125;http &#123;    include       mime.types;    default_type  application&#x2F;octet-stream;    #access_log  logs&#x2F;access.log  main;    sendfile        on;    #tcp_nopush     on;    #keepalive_timeout  0;    keepalive_timeout  65;    client_max_body_size 20m;    #gzip  on;    server &#123;        listen       80;        server_name  localhost;        location &#x2F; &#123;            root   D:\xxx\public;            index  index.html index.htm index.php;            try_files $uri $uri&#x2F; &#x2F;index.php?$query_string;        &#125;        location ~ ^&#x2F;(images|javascript|js|css|flash|media|static)&#x2F; &#123;                root D:\xxx\public;                expires 30d;        &#125;        error_page   500 502 503 504  &#x2F;50x.html;        location &#x3D; &#x2F;50x.html &#123;            root   html;        &#125;        location ~ \.php$ &#123;            root           D:\xxx\public;            fastcgi_pass   localhost:9000;            fastcgi_index  index.php;            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;            include        fastcgi_params;        &#125;    &#125;    include web-other.conf;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
